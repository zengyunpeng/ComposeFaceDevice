// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: IfDoorControlConfiguration.proto

package com.intellif.ifai.config;

/**
 * Protobuf type {@code Ifaipb.DoorInfraredConfiguration}
 */
public  final class DoorInfraredConfiguration extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:Ifaipb.DoorInfraredConfiguration)
    DoorInfraredConfigurationOrBuilder {
private static final long serialVersionUID = 0L;
  // Use DoorInfraredConfiguration.newBuilder() to construct.
  private DoorInfraredConfiguration(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private DoorInfraredConfiguration() {
    infraredTemperatureSwitch_ = false;
    infraredTemperatureMinimum_ = 0F;
    infraredTemperatureMaximum_ = 0F;
    infraredTemperatureAdjust_ = 0F;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private DoorInfraredConfiguration(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            infraredTemperatureSwitch_ = input.readBool();
            break;
          }
          case 21: {

            infraredTemperatureMinimum_ = input.readFloat();
            break;
          }
          case 29: {

            infraredTemperatureMaximum_ = input.readFloat();
            break;
          }
          case 37: {

            infraredTemperatureAdjust_ = input.readFloat();
            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.intellif.ifai.config.Ifai.internal_static_Ifaipb_DoorInfraredConfiguration_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.intellif.ifai.config.Ifai.internal_static_Ifaipb_DoorInfraredConfiguration_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.intellif.ifai.config.DoorInfraredConfiguration.class, com.intellif.ifai.config.DoorInfraredConfiguration.Builder.class);
  }

  public static final int INFRARED_TEMPERATURE_SWITCH_FIELD_NUMBER = 1;
  private boolean infraredTemperatureSwitch_;
  /**
   * <pre>
   * 红外温度报警开关
   * </pre>
   *
   * <code>bool infrared_temperature_switch = 1;</code>
   */
  public boolean getInfraredTemperatureSwitch() {
    return infraredTemperatureSwitch_;
  }

  public static final int INFRARED_TEMPERATURE_MINIMUM_FIELD_NUMBER = 2;
  private float infraredTemperatureMinimum_;
  /**
   * <pre>
   * 红外温度报警阈值最小值
   * </pre>
   *
   * <code>float infrared_temperature_minimum = 2;</code>
   */
  public float getInfraredTemperatureMinimum() {
    return infraredTemperatureMinimum_;
  }

  public static final int INFRARED_TEMPERATURE_MAXIMUM_FIELD_NUMBER = 3;
  private float infraredTemperatureMaximum_;
  /**
   * <pre>
   * 红外温度报警阈值最大值
   * </pre>
   *
   * <code>float infrared_temperature_maximum = 3;</code>
   */
  public float getInfraredTemperatureMaximum() {
    return infraredTemperatureMaximum_;
  }

  public static final int INFRARED_TEMPERATURE_ADJUST_FIELD_NUMBER = 4;
  private float infraredTemperatureAdjust_;
  /**
   * <pre>
   * 红外温度修正参数
   * </pre>
   *
   * <code>float infrared_temperature_adjust = 4;</code>
   */
  public float getInfraredTemperatureAdjust() {
    return infraredTemperatureAdjust_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (infraredTemperatureSwitch_ != false) {
      output.writeBool(1, infraredTemperatureSwitch_);
    }
    if (infraredTemperatureMinimum_ != 0F) {
      output.writeFloat(2, infraredTemperatureMinimum_);
    }
    if (infraredTemperatureMaximum_ != 0F) {
      output.writeFloat(3, infraredTemperatureMaximum_);
    }
    if (infraredTemperatureAdjust_ != 0F) {
      output.writeFloat(4, infraredTemperatureAdjust_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (infraredTemperatureSwitch_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(1, infraredTemperatureSwitch_);
    }
    if (infraredTemperatureMinimum_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(2, infraredTemperatureMinimum_);
    }
    if (infraredTemperatureMaximum_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(3, infraredTemperatureMaximum_);
    }
    if (infraredTemperatureAdjust_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(4, infraredTemperatureAdjust_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.intellif.ifai.config.DoorInfraredConfiguration)) {
      return super.equals(obj);
    }
    com.intellif.ifai.config.DoorInfraredConfiguration other = (com.intellif.ifai.config.DoorInfraredConfiguration) obj;

    boolean result = true;
    result = result && (getInfraredTemperatureSwitch()
        == other.getInfraredTemperatureSwitch());
    result = result && (
        java.lang.Float.floatToIntBits(getInfraredTemperatureMinimum())
        == java.lang.Float.floatToIntBits(
            other.getInfraredTemperatureMinimum()));
    result = result && (
        java.lang.Float.floatToIntBits(getInfraredTemperatureMaximum())
        == java.lang.Float.floatToIntBits(
            other.getInfraredTemperatureMaximum()));
    result = result && (
        java.lang.Float.floatToIntBits(getInfraredTemperatureAdjust())
        == java.lang.Float.floatToIntBits(
            other.getInfraredTemperatureAdjust()));
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + INFRARED_TEMPERATURE_SWITCH_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getInfraredTemperatureSwitch());
    hash = (37 * hash) + INFRARED_TEMPERATURE_MINIMUM_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getInfraredTemperatureMinimum());
    hash = (37 * hash) + INFRARED_TEMPERATURE_MAXIMUM_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getInfraredTemperatureMaximum());
    hash = (37 * hash) + INFRARED_TEMPERATURE_ADJUST_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getInfraredTemperatureAdjust());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.intellif.ifai.config.DoorInfraredConfiguration parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.intellif.ifai.config.DoorInfraredConfiguration parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.intellif.ifai.config.DoorInfraredConfiguration parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.intellif.ifai.config.DoorInfraredConfiguration parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.intellif.ifai.config.DoorInfraredConfiguration parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.intellif.ifai.config.DoorInfraredConfiguration parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.intellif.ifai.config.DoorInfraredConfiguration parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.intellif.ifai.config.DoorInfraredConfiguration parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.intellif.ifai.config.DoorInfraredConfiguration parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.intellif.ifai.config.DoorInfraredConfiguration parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.intellif.ifai.config.DoorInfraredConfiguration parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.intellif.ifai.config.DoorInfraredConfiguration parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.intellif.ifai.config.DoorInfraredConfiguration prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code Ifaipb.DoorInfraredConfiguration}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:Ifaipb.DoorInfraredConfiguration)
      com.intellif.ifai.config.DoorInfraredConfigurationOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.intellif.ifai.config.Ifai.internal_static_Ifaipb_DoorInfraredConfiguration_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.intellif.ifai.config.Ifai.internal_static_Ifaipb_DoorInfraredConfiguration_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.intellif.ifai.config.DoorInfraredConfiguration.class, com.intellif.ifai.config.DoorInfraredConfiguration.Builder.class);
    }

    // Construct using com.intellif.ifai.config.DoorInfraredConfiguration.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      infraredTemperatureSwitch_ = false;

      infraredTemperatureMinimum_ = 0F;

      infraredTemperatureMaximum_ = 0F;

      infraredTemperatureAdjust_ = 0F;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.intellif.ifai.config.Ifai.internal_static_Ifaipb_DoorInfraredConfiguration_descriptor;
    }

    @java.lang.Override
    public com.intellif.ifai.config.DoorInfraredConfiguration getDefaultInstanceForType() {
      return com.intellif.ifai.config.DoorInfraredConfiguration.getDefaultInstance();
    }

    @java.lang.Override
    public com.intellif.ifai.config.DoorInfraredConfiguration build() {
      com.intellif.ifai.config.DoorInfraredConfiguration result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.intellif.ifai.config.DoorInfraredConfiguration buildPartial() {
      com.intellif.ifai.config.DoorInfraredConfiguration result = new com.intellif.ifai.config.DoorInfraredConfiguration(this);
      result.infraredTemperatureSwitch_ = infraredTemperatureSwitch_;
      result.infraredTemperatureMinimum_ = infraredTemperatureMinimum_;
      result.infraredTemperatureMaximum_ = infraredTemperatureMaximum_;
      result.infraredTemperatureAdjust_ = infraredTemperatureAdjust_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.intellif.ifai.config.DoorInfraredConfiguration) {
        return mergeFrom((com.intellif.ifai.config.DoorInfraredConfiguration)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.intellif.ifai.config.DoorInfraredConfiguration other) {
      if (other == com.intellif.ifai.config.DoorInfraredConfiguration.getDefaultInstance()) return this;
      if (other.getInfraredTemperatureSwitch() != false) {
        setInfraredTemperatureSwitch(other.getInfraredTemperatureSwitch());
      }
      if (other.getInfraredTemperatureMinimum() != 0F) {
        setInfraredTemperatureMinimum(other.getInfraredTemperatureMinimum());
      }
      if (other.getInfraredTemperatureMaximum() != 0F) {
        setInfraredTemperatureMaximum(other.getInfraredTemperatureMaximum());
      }
      if (other.getInfraredTemperatureAdjust() != 0F) {
        setInfraredTemperatureAdjust(other.getInfraredTemperatureAdjust());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.intellif.ifai.config.DoorInfraredConfiguration parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.intellif.ifai.config.DoorInfraredConfiguration) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private boolean infraredTemperatureSwitch_ ;
    /**
     * <pre>
     * 红外温度报警开关
     * </pre>
     *
     * <code>bool infrared_temperature_switch = 1;</code>
     */
    public boolean getInfraredTemperatureSwitch() {
      return infraredTemperatureSwitch_;
    }
    /**
     * <pre>
     * 红外温度报警开关
     * </pre>
     *
     * <code>bool infrared_temperature_switch = 1;</code>
     */
    public Builder setInfraredTemperatureSwitch(boolean value) {
      
      infraredTemperatureSwitch_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 红外温度报警开关
     * </pre>
     *
     * <code>bool infrared_temperature_switch = 1;</code>
     */
    public Builder clearInfraredTemperatureSwitch() {
      
      infraredTemperatureSwitch_ = false;
      onChanged();
      return this;
    }

    private float infraredTemperatureMinimum_ ;
    /**
     * <pre>
     * 红外温度报警阈值最小值
     * </pre>
     *
     * <code>float infrared_temperature_minimum = 2;</code>
     */
    public float getInfraredTemperatureMinimum() {
      return infraredTemperatureMinimum_;
    }
    /**
     * <pre>
     * 红外温度报警阈值最小值
     * </pre>
     *
     * <code>float infrared_temperature_minimum = 2;</code>
     */
    public Builder setInfraredTemperatureMinimum(float value) {
      
      infraredTemperatureMinimum_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 红外温度报警阈值最小值
     * </pre>
     *
     * <code>float infrared_temperature_minimum = 2;</code>
     */
    public Builder clearInfraredTemperatureMinimum() {
      
      infraredTemperatureMinimum_ = 0F;
      onChanged();
      return this;
    }

    private float infraredTemperatureMaximum_ ;
    /**
     * <pre>
     * 红外温度报警阈值最大值
     * </pre>
     *
     * <code>float infrared_temperature_maximum = 3;</code>
     */
    public float getInfraredTemperatureMaximum() {
      return infraredTemperatureMaximum_;
    }
    /**
     * <pre>
     * 红外温度报警阈值最大值
     * </pre>
     *
     * <code>float infrared_temperature_maximum = 3;</code>
     */
    public Builder setInfraredTemperatureMaximum(float value) {
      
      infraredTemperatureMaximum_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 红外温度报警阈值最大值
     * </pre>
     *
     * <code>float infrared_temperature_maximum = 3;</code>
     */
    public Builder clearInfraredTemperatureMaximum() {
      
      infraredTemperatureMaximum_ = 0F;
      onChanged();
      return this;
    }

    private float infraredTemperatureAdjust_ ;
    /**
     * <pre>
     * 红外温度修正参数
     * </pre>
     *
     * <code>float infrared_temperature_adjust = 4;</code>
     */
    public float getInfraredTemperatureAdjust() {
      return infraredTemperatureAdjust_;
    }
    /**
     * <pre>
     * 红外温度修正参数
     * </pre>
     *
     * <code>float infrared_temperature_adjust = 4;</code>
     */
    public Builder setInfraredTemperatureAdjust(float value) {
      
      infraredTemperatureAdjust_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 红外温度修正参数
     * </pre>
     *
     * <code>float infrared_temperature_adjust = 4;</code>
     */
    public Builder clearInfraredTemperatureAdjust() {
      
      infraredTemperatureAdjust_ = 0F;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:Ifaipb.DoorInfraredConfiguration)
  }

  // @@protoc_insertion_point(class_scope:Ifaipb.DoorInfraredConfiguration)
  private static final com.intellif.ifai.config.DoorInfraredConfiguration DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.intellif.ifai.config.DoorInfraredConfiguration();
  }

  public static com.intellif.ifai.config.DoorInfraredConfiguration getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DoorInfraredConfiguration>
      PARSER = new com.google.protobuf.AbstractParser<DoorInfraredConfiguration>() {
    @java.lang.Override
    public DoorInfraredConfiguration parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new DoorInfraredConfiguration(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<DoorInfraredConfiguration> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DoorInfraredConfiguration> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.intellif.ifai.config.DoorInfraredConfiguration getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

