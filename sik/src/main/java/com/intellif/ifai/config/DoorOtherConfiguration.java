// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: IfDoorControlConfiguration.proto

package com.intellif.ifai.config;

/**
 * Protobuf type {@code Ifaipb.DoorOtherConfiguration}
 */
public  final class DoorOtherConfiguration extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:Ifaipb.DoorOtherConfiguration)
    DoorOtherConfigurationOrBuilder {
private static final long serialVersionUID = 0L;
  // Use DoorOtherConfiguration.newBuilder() to construct.
  private DoorOtherConfiguration(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private DoorOtherConfiguration() {
    whiteLightMode_ = 0;
    volume_ = 0;
    livenessThreshold_ = 0F;
    qualityThreshold_ = 0F;
    minFaceSize_ = 0;
    maxFaceSize_ = 0;
    recogInterval_ = 0;
    strangerTimes_ = 0;
    saveOffline_ = false;
    picUploadType_ = 0;
    hExpandCoff_ = 0;
    vExpandCoff_ = 0;
    picQuality_ = 0;
    nameShowWay_ = 0;
    wifiAccount_ = "";
    wifiPasswd_ = "";
    language_ = 0;
    qrCodeDeviceType_ = 0;
    successVoiceStyle_ = 0;
    successShowStyle_ = 0;
    faceRectRate_ = 0;
    picNoiseDet_ = false;
    facePoseDet_ = false;
    regWithNoMask_ = false;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private DoorOtherConfiguration(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            whiteLightMode_ = input.readInt32();
            break;
          }
          case 18: {
            com.intellif.ifai.common.TimePeriod.Builder subBuilder = null;
            if (whiteLightTime_ != null) {
              subBuilder = whiteLightTime_.toBuilder();
            }
            whiteLightTime_ = input.readMessage(com.intellif.ifai.common.TimePeriod.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(whiteLightTime_);
              whiteLightTime_ = subBuilder.buildPartial();
            }

            break;
          }
          case 24: {

            volume_ = input.readInt32();
            break;
          }
          case 37: {

            livenessThreshold_ = input.readFloat();
            break;
          }
          case 45: {

            qualityThreshold_ = input.readFloat();
            break;
          }
          case 48: {

            minFaceSize_ = input.readInt32();
            break;
          }
          case 56: {

            maxFaceSize_ = input.readInt32();
            break;
          }
          case 64: {

            recogInterval_ = input.readInt32();
            break;
          }
          case 72: {

            strangerTimes_ = input.readInt32();
            break;
          }
          case 80: {

            saveOffline_ = input.readBool();
            break;
          }
          case 88: {

            picUploadType_ = input.readInt32();
            break;
          }
          case 96: {

            hExpandCoff_ = input.readInt32();
            break;
          }
          case 104: {

            vExpandCoff_ = input.readInt32();
            break;
          }
          case 112: {

            picQuality_ = input.readInt32();
            break;
          }
          case 120: {

            nameShowWay_ = input.readInt32();
            break;
          }
          case 130: {
            java.lang.String s = input.readStringRequireUtf8();

            wifiAccount_ = s;
            break;
          }
          case 138: {
            java.lang.String s = input.readStringRequireUtf8();

            wifiPasswd_ = s;
            break;
          }
          case 144: {

            language_ = input.readInt32();
            break;
          }
          case 152: {

            qrCodeDeviceType_ = input.readInt32();
            break;
          }
          case 160: {

            successVoiceStyle_ = input.readInt32();
            break;
          }
          case 168: {

            successShowStyle_ = input.readInt32();
            break;
          }
          case 176: {

            faceRectRate_ = input.readInt32();
            break;
          }
          case 184: {

            picNoiseDet_ = input.readBool();
            break;
          }
          case 192: {

            facePoseDet_ = input.readBool();
            break;
          }
          case 200: {

            regWithNoMask_ = input.readBool();
            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.intellif.ifai.config.Ifai.internal_static_Ifaipb_DoorOtherConfiguration_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.intellif.ifai.config.Ifai.internal_static_Ifaipb_DoorOtherConfiguration_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.intellif.ifai.config.DoorOtherConfiguration.class, com.intellif.ifai.config.DoorOtherConfiguration.Builder.class);
  }

  public static final int WHITELIGHT_MODE_FIELD_NUMBER = 1;
  private int whiteLightMode_;
  /**
   * <pre>
   *补光灯模式 1-人脸控制 2-时间控制
   * </pre>
   *
   * <code>int32 whiteLight_mode = 1;</code>
   */
  public int getWhiteLightMode() {
    return whiteLightMode_;
  }

  public static final int WHITELIGHT_TIME_FIELD_NUMBER = 2;
  private com.intellif.ifai.common.TimePeriod whiteLightTime_;
  /**
   * <pre>
   *补光灯开启关闭时间
   * </pre>
   *
   * <code>.Ifaipb.TimePeriod whiteLight_time = 2;</code>
   */
  public boolean hasWhiteLightTime() {
    return whiteLightTime_ != null;
  }
  /**
   * <pre>
   *补光灯开启关闭时间
   * </pre>
   *
   * <code>.Ifaipb.TimePeriod whiteLight_time = 2;</code>
   */
  public com.intellif.ifai.common.TimePeriod getWhiteLightTime() {
    return whiteLightTime_ == null ? com.intellif.ifai.common.TimePeriod.getDefaultInstance() : whiteLightTime_;
  }
  /**
   * <pre>
   *补光灯开启关闭时间
   * </pre>
   *
   * <code>.Ifaipb.TimePeriod whiteLight_time = 2;</code>
   */
  public com.intellif.ifai.common.TimePeriodOrBuilder getWhiteLightTimeOrBuilder() {
    return getWhiteLightTime();
  }

  public static final int VOLUME_FIELD_NUMBER = 3;
  private int volume_;
  /**
   * <pre>
   *音量 0-255
   * </pre>
   *
   * <code>int32 volume = 3;</code>
   */
  public int getVolume() {
    return volume_;
  }

  public static final int LIVENESS_THRESHOLD_FIELD_NUMBER = 4;
  private float livenessThreshold_;
  /**
   * <pre>
   *活体阈值
   * </pre>
   *
   * <code>float liveness_threshold = 4;</code>
   */
  public float getLivenessThreshold() {
    return livenessThreshold_;
  }

  public static final int QUALITY_THRESHOLD_FIELD_NUMBER = 5;
  private float qualityThreshold_;
  /**
   * <pre>
   *质量阈值
   * </pre>
   *
   * <code>float quality_threshold = 5;</code>
   */
  public float getQualityThreshold() {
    return qualityThreshold_;
  }

  public static final int MINFACESIZE_FIELD_NUMBER = 6;
  private int minFaceSize_;
  /**
   * <pre>
   *最小人脸像素
   * </pre>
   *
   * <code>int32 minFaceSize = 6;</code>
   */
  public int getMinFaceSize() {
    return minFaceSize_;
  }

  public static final int MAXFACESIZE_FIELD_NUMBER = 7;
  private int maxFaceSize_;
  /**
   * <pre>
   *最大人脸像素
   * </pre>
   *
   * <code>int32 maxFaceSize = 7;</code>
   */
  public int getMaxFaceSize() {
    return maxFaceSize_;
  }

  public static final int RECOGINTERVAL_FIELD_NUMBER = 8;
  private int recogInterval_;
  /**
   * <pre>
   *识别间隔 
   * </pre>
   *
   * <code>int32 recogInterval = 8;</code>
   */
  public int getRecogInterval() {
    return recogInterval_;
  }

  public static final int STRANGERTIMES_FIELD_NUMBER = 9;
  private int strangerTimes_;
  /**
   * <pre>
   *陌生人比对次数
   * </pre>
   *
   * <code>int32 strangerTimes = 9;</code>
   */
  public int getStrangerTimes() {
    return strangerTimes_;
  }

  public static final int SAVEOFFLINE_FIELD_NUMBER = 10;
  private boolean saveOffline_;
  /**
   * <pre>
   *离线保存开关
   * </pre>
   *
   * <code>bool saveOffline = 10;</code>
   */
  public boolean getSaveOffline() {
    return saveOffline_;
  }

  public static final int PICUPLOADTYPE_FIELD_NUMBER = 11;
  private int picUploadType_;
  /**
   * <pre>
   *图片上报类型 0-不上传 1-人脸图 2-背景图 3-人脸+背景
   * </pre>
   *
   * <code>int32 picUploadType = 11;</code>
   */
  public int getPicUploadType() {
    return picUploadType_;
  }

  public static final int HEXPANDCOFF_FIELD_NUMBER = 12;
  private int hExpandCoff_;
  /**
   * <pre>
   *水平扩展系数 0-10
   * </pre>
   *
   * <code>int32 hExpandCoff = 12;</code>
   */
  public int getHExpandCoff() {
    return hExpandCoff_;
  }

  public static final int VEXPANDCOFF_FIELD_NUMBER = 13;
  private int vExpandCoff_;
  /**
   * <pre>
   *垂直扩展系数 0-10
   * </pre>
   *
   * <code>int32 vExpandCoff = 13;</code>
   */
  public int getVExpandCoff() {
    return vExpandCoff_;
  }

  public static final int PICQUALITY_FIELD_NUMBER = 14;
  private int picQuality_;
  /**
   * <pre>
   *图片编码质量 1-100
   * </pre>
   *
   * <code>int32 picQuality = 14;</code>
   */
  public int getPicQuality() {
    return picQuality_;
  }

  public static final int NAMESHOWWAY_FIELD_NUMBER = 15;
  private int nameShowWay_;
  /**
   * <pre>
   *0-**字 1-全名 2-字字* 20200702
   * </pre>
   *
   * <code>int32 nameShowWay = 15;</code>
   */
  public int getNameShowWay() {
    return nameShowWay_;
  }

  public static final int WIFI_ACCOUNT_FIELD_NUMBER = 16;
  private volatile java.lang.Object wifiAccount_;
  /**
   * <pre>
   *wifi账号
   * </pre>
   *
   * <code>string wifi_account = 16;</code>
   */
  public java.lang.String getWifiAccount() {
    java.lang.Object ref = wifiAccount_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      wifiAccount_ = s;
      return s;
    }
  }
  /**
   * <pre>
   *wifi账号
   * </pre>
   *
   * <code>string wifi_account = 16;</code>
   */
  public com.google.protobuf.ByteString
      getWifiAccountBytes() {
    java.lang.Object ref = wifiAccount_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      wifiAccount_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int WIFI_PASSWD_FIELD_NUMBER = 17;
  private volatile java.lang.Object wifiPasswd_;
  /**
   * <pre>
   *wifi密码
   * </pre>
   *
   * <code>string wifi_passwd = 17;</code>
   */
  public java.lang.String getWifiPasswd() {
    java.lang.Object ref = wifiPasswd_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      wifiPasswd_ = s;
      return s;
    }
  }
  /**
   * <pre>
   *wifi密码
   * </pre>
   *
   * <code>string wifi_passwd = 17;</code>
   */
  public com.google.protobuf.ByteString
      getWifiPasswdBytes() {
    java.lang.Object ref = wifiPasswd_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      wifiPasswd_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int LANGUAGE_FIELD_NUMBER = 18;
  private int language_;
  /**
   * <pre>
   *设备语言 0-中文 1-英文 20200724 
   * </pre>
   *
   * <code>int32 language = 18;</code>
   */
  public int getLanguage() {
    return language_;
  }

  public static final int QRCODEDEVICETYPE_FIELD_NUMBER = 19;
  private int qrCodeDeviceType_;
  /**
   * <pre>
   *0代表摄像头，1 2 3代表模块,1-牛图，2- 塞伯羅斯,3-微光互联，
   * </pre>
   *
   * <code>int32 qrCodeDeviceType = 19;</code>
   */
  public int getQrCodeDeviceType() {
    return qrCodeDeviceType_;
  }

  public static final int SUCCESSVOICESTYLE_FIELD_NUMBER = 20;
  private int successVoiceStyle_;
  /**
   * <pre>
   *鉴权通过后的语言播报类型
   * </pre>
   *
   * <code>int32 successVoiceStyle = 20;</code>
   */
  public int getSuccessVoiceStyle() {
    return successVoiceStyle_;
  }

  public static final int SUCCESSSHOWSTYLE_FIELD_NUMBER = 21;
  private int successShowStyle_;
  /**
   * <pre>
   *鉴权通过后显示的类型
   * </pre>
   *
   * <code>int32 successShowStyle = 21;</code>
   */
  public int getSuccessShowStyle() {
    return successShowStyle_;
  }

  public static final int FACERECTRATE_FIELD_NUMBER = 22;
  private int faceRectRate_;
  /**
   * <pre>
   *人脸框显示比例-海康测温模组使用 20201014
   * </pre>
   *
   * <code>int32 faceRectRate = 22;</code>
   */
  public int getFaceRectRate() {
    return faceRectRate_;
  }

  public static final int PICNOISEDET_FIELD_NUMBER = 23;
  private boolean picNoiseDet_;
  /**
   * <pre>
   *噪声检测开关，默认开 20201021 
   * </pre>
   *
   * <code>bool picNoiseDet = 23;</code>
   */
  public boolean getPicNoiseDet() {
    return picNoiseDet_;
  }

  public static final int FACEPOSEDET_FIELD_NUMBER = 24;
  private boolean facePoseDet_;
  /**
   * <pre>
   *人脸角度检测开关，默认开 20201021
   * </pre>
   *
   * <code>bool facePoseDet = 24;</code>
   */
  public boolean getFacePoseDet() {
    return facePoseDet_;
  }

  public static final int REGWITHNOMASK_FIELD_NUMBER = 25;
  private boolean regWithNoMask_;
  /**
   * <pre>
   *摘口罩识别，默认关 20201021
   * </pre>
   *
   * <code>bool regWithNoMask = 25;</code>
   */
  public boolean getRegWithNoMask() {
    return regWithNoMask_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (whiteLightMode_ != 0) {
      output.writeInt32(1, whiteLightMode_);
    }
    if (whiteLightTime_ != null) {
      output.writeMessage(2, getWhiteLightTime());
    }
    if (volume_ != 0) {
      output.writeInt32(3, volume_);
    }
    if (livenessThreshold_ != 0F) {
      output.writeFloat(4, livenessThreshold_);
    }
    if (qualityThreshold_ != 0F) {
      output.writeFloat(5, qualityThreshold_);
    }
    if (minFaceSize_ != 0) {
      output.writeInt32(6, minFaceSize_);
    }
    if (maxFaceSize_ != 0) {
      output.writeInt32(7, maxFaceSize_);
    }
    if (recogInterval_ != 0) {
      output.writeInt32(8, recogInterval_);
    }
    if (strangerTimes_ != 0) {
      output.writeInt32(9, strangerTimes_);
    }
    if (saveOffline_ != false) {
      output.writeBool(10, saveOffline_);
    }
    if (picUploadType_ != 0) {
      output.writeInt32(11, picUploadType_);
    }
    if (hExpandCoff_ != 0) {
      output.writeInt32(12, hExpandCoff_);
    }
    if (vExpandCoff_ != 0) {
      output.writeInt32(13, vExpandCoff_);
    }
    if (picQuality_ != 0) {
      output.writeInt32(14, picQuality_);
    }
    if (nameShowWay_ != 0) {
      output.writeInt32(15, nameShowWay_);
    }
    if (!getWifiAccountBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 16, wifiAccount_);
    }
    if (!getWifiPasswdBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 17, wifiPasswd_);
    }
    if (language_ != 0) {
      output.writeInt32(18, language_);
    }
    if (qrCodeDeviceType_ != 0) {
      output.writeInt32(19, qrCodeDeviceType_);
    }
    if (successVoiceStyle_ != 0) {
      output.writeInt32(20, successVoiceStyle_);
    }
    if (successShowStyle_ != 0) {
      output.writeInt32(21, successShowStyle_);
    }
    if (faceRectRate_ != 0) {
      output.writeInt32(22, faceRectRate_);
    }
    if (picNoiseDet_ != false) {
      output.writeBool(23, picNoiseDet_);
    }
    if (facePoseDet_ != false) {
      output.writeBool(24, facePoseDet_);
    }
    if (regWithNoMask_ != false) {
      output.writeBool(25, regWithNoMask_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (whiteLightMode_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, whiteLightMode_);
    }
    if (whiteLightTime_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getWhiteLightTime());
    }
    if (volume_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, volume_);
    }
    if (livenessThreshold_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(4, livenessThreshold_);
    }
    if (qualityThreshold_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(5, qualityThreshold_);
    }
    if (minFaceSize_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, minFaceSize_);
    }
    if (maxFaceSize_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, maxFaceSize_);
    }
    if (recogInterval_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(8, recogInterval_);
    }
    if (strangerTimes_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(9, strangerTimes_);
    }
    if (saveOffline_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(10, saveOffline_);
    }
    if (picUploadType_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(11, picUploadType_);
    }
    if (hExpandCoff_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(12, hExpandCoff_);
    }
    if (vExpandCoff_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(13, vExpandCoff_);
    }
    if (picQuality_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(14, picQuality_);
    }
    if (nameShowWay_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(15, nameShowWay_);
    }
    if (!getWifiAccountBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(16, wifiAccount_);
    }
    if (!getWifiPasswdBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(17, wifiPasswd_);
    }
    if (language_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(18, language_);
    }
    if (qrCodeDeviceType_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(19, qrCodeDeviceType_);
    }
    if (successVoiceStyle_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(20, successVoiceStyle_);
    }
    if (successShowStyle_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(21, successShowStyle_);
    }
    if (faceRectRate_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(22, faceRectRate_);
    }
    if (picNoiseDet_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(23, picNoiseDet_);
    }
    if (facePoseDet_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(24, facePoseDet_);
    }
    if (regWithNoMask_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(25, regWithNoMask_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.intellif.ifai.config.DoorOtherConfiguration)) {
      return super.equals(obj);
    }
    com.intellif.ifai.config.DoorOtherConfiguration other = (com.intellif.ifai.config.DoorOtherConfiguration) obj;

    boolean result = true;
    result = result && (getWhiteLightMode()
        == other.getWhiteLightMode());
    result = result && (hasWhiteLightTime() == other.hasWhiteLightTime());
    if (hasWhiteLightTime()) {
      result = result && getWhiteLightTime()
          .equals(other.getWhiteLightTime());
    }
    result = result && (getVolume()
        == other.getVolume());
    result = result && (
        java.lang.Float.floatToIntBits(getLivenessThreshold())
        == java.lang.Float.floatToIntBits(
            other.getLivenessThreshold()));
    result = result && (
        java.lang.Float.floatToIntBits(getQualityThreshold())
        == java.lang.Float.floatToIntBits(
            other.getQualityThreshold()));
    result = result && (getMinFaceSize()
        == other.getMinFaceSize());
    result = result && (getMaxFaceSize()
        == other.getMaxFaceSize());
    result = result && (getRecogInterval()
        == other.getRecogInterval());
    result = result && (getStrangerTimes()
        == other.getStrangerTimes());
    result = result && (getSaveOffline()
        == other.getSaveOffline());
    result = result && (getPicUploadType()
        == other.getPicUploadType());
    result = result && (getHExpandCoff()
        == other.getHExpandCoff());
    result = result && (getVExpandCoff()
        == other.getVExpandCoff());
    result = result && (getPicQuality()
        == other.getPicQuality());
    result = result && (getNameShowWay()
        == other.getNameShowWay());
    result = result && getWifiAccount()
        .equals(other.getWifiAccount());
    result = result && getWifiPasswd()
        .equals(other.getWifiPasswd());
    result = result && (getLanguage()
        == other.getLanguage());
    result = result && (getQrCodeDeviceType()
        == other.getQrCodeDeviceType());
    result = result && (getSuccessVoiceStyle()
        == other.getSuccessVoiceStyle());
    result = result && (getSuccessShowStyle()
        == other.getSuccessShowStyle());
    result = result && (getFaceRectRate()
        == other.getFaceRectRate());
    result = result && (getPicNoiseDet()
        == other.getPicNoiseDet());
    result = result && (getFacePoseDet()
        == other.getFacePoseDet());
    result = result && (getRegWithNoMask()
        == other.getRegWithNoMask());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + WHITELIGHT_MODE_FIELD_NUMBER;
    hash = (53 * hash) + getWhiteLightMode();
    if (hasWhiteLightTime()) {
      hash = (37 * hash) + WHITELIGHT_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getWhiteLightTime().hashCode();
    }
    hash = (37 * hash) + VOLUME_FIELD_NUMBER;
    hash = (53 * hash) + getVolume();
    hash = (37 * hash) + LIVENESS_THRESHOLD_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getLivenessThreshold());
    hash = (37 * hash) + QUALITY_THRESHOLD_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getQualityThreshold());
    hash = (37 * hash) + MINFACESIZE_FIELD_NUMBER;
    hash = (53 * hash) + getMinFaceSize();
    hash = (37 * hash) + MAXFACESIZE_FIELD_NUMBER;
    hash = (53 * hash) + getMaxFaceSize();
    hash = (37 * hash) + RECOGINTERVAL_FIELD_NUMBER;
    hash = (53 * hash) + getRecogInterval();
    hash = (37 * hash) + STRANGERTIMES_FIELD_NUMBER;
    hash = (53 * hash) + getStrangerTimes();
    hash = (37 * hash) + SAVEOFFLINE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getSaveOffline());
    hash = (37 * hash) + PICUPLOADTYPE_FIELD_NUMBER;
    hash = (53 * hash) + getPicUploadType();
    hash = (37 * hash) + HEXPANDCOFF_FIELD_NUMBER;
    hash = (53 * hash) + getHExpandCoff();
    hash = (37 * hash) + VEXPANDCOFF_FIELD_NUMBER;
    hash = (53 * hash) + getVExpandCoff();
    hash = (37 * hash) + PICQUALITY_FIELD_NUMBER;
    hash = (53 * hash) + getPicQuality();
    hash = (37 * hash) + NAMESHOWWAY_FIELD_NUMBER;
    hash = (53 * hash) + getNameShowWay();
    hash = (37 * hash) + WIFI_ACCOUNT_FIELD_NUMBER;
    hash = (53 * hash) + getWifiAccount().hashCode();
    hash = (37 * hash) + WIFI_PASSWD_FIELD_NUMBER;
    hash = (53 * hash) + getWifiPasswd().hashCode();
    hash = (37 * hash) + LANGUAGE_FIELD_NUMBER;
    hash = (53 * hash) + getLanguage();
    hash = (37 * hash) + QRCODEDEVICETYPE_FIELD_NUMBER;
    hash = (53 * hash) + getQrCodeDeviceType();
    hash = (37 * hash) + SUCCESSVOICESTYLE_FIELD_NUMBER;
    hash = (53 * hash) + getSuccessVoiceStyle();
    hash = (37 * hash) + SUCCESSSHOWSTYLE_FIELD_NUMBER;
    hash = (53 * hash) + getSuccessShowStyle();
    hash = (37 * hash) + FACERECTRATE_FIELD_NUMBER;
    hash = (53 * hash) + getFaceRectRate();
    hash = (37 * hash) + PICNOISEDET_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getPicNoiseDet());
    hash = (37 * hash) + FACEPOSEDET_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getFacePoseDet());
    hash = (37 * hash) + REGWITHNOMASK_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getRegWithNoMask());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.intellif.ifai.config.DoorOtherConfiguration parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.intellif.ifai.config.DoorOtherConfiguration parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.intellif.ifai.config.DoorOtherConfiguration parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.intellif.ifai.config.DoorOtherConfiguration parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.intellif.ifai.config.DoorOtherConfiguration parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.intellif.ifai.config.DoorOtherConfiguration parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.intellif.ifai.config.DoorOtherConfiguration parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.intellif.ifai.config.DoorOtherConfiguration parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.intellif.ifai.config.DoorOtherConfiguration parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.intellif.ifai.config.DoorOtherConfiguration parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.intellif.ifai.config.DoorOtherConfiguration parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.intellif.ifai.config.DoorOtherConfiguration parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.intellif.ifai.config.DoorOtherConfiguration prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code Ifaipb.DoorOtherConfiguration}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:Ifaipb.DoorOtherConfiguration)
      com.intellif.ifai.config.DoorOtherConfigurationOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.intellif.ifai.config.Ifai.internal_static_Ifaipb_DoorOtherConfiguration_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.intellif.ifai.config.Ifai.internal_static_Ifaipb_DoorOtherConfiguration_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.intellif.ifai.config.DoorOtherConfiguration.class, com.intellif.ifai.config.DoorOtherConfiguration.Builder.class);
    }

    // Construct using com.intellif.ifai.config.DoorOtherConfiguration.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      whiteLightMode_ = 0;

      if (whiteLightTimeBuilder_ == null) {
        whiteLightTime_ = null;
      } else {
        whiteLightTime_ = null;
        whiteLightTimeBuilder_ = null;
      }
      volume_ = 0;

      livenessThreshold_ = 0F;

      qualityThreshold_ = 0F;

      minFaceSize_ = 0;

      maxFaceSize_ = 0;

      recogInterval_ = 0;

      strangerTimes_ = 0;

      saveOffline_ = false;

      picUploadType_ = 0;

      hExpandCoff_ = 0;

      vExpandCoff_ = 0;

      picQuality_ = 0;

      nameShowWay_ = 0;

      wifiAccount_ = "";

      wifiPasswd_ = "";

      language_ = 0;

      qrCodeDeviceType_ = 0;

      successVoiceStyle_ = 0;

      successShowStyle_ = 0;

      faceRectRate_ = 0;

      picNoiseDet_ = false;

      facePoseDet_ = false;

      regWithNoMask_ = false;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.intellif.ifai.config.Ifai.internal_static_Ifaipb_DoorOtherConfiguration_descriptor;
    }

    @java.lang.Override
    public com.intellif.ifai.config.DoorOtherConfiguration getDefaultInstanceForType() {
      return com.intellif.ifai.config.DoorOtherConfiguration.getDefaultInstance();
    }

    @java.lang.Override
    public com.intellif.ifai.config.DoorOtherConfiguration build() {
      com.intellif.ifai.config.DoorOtherConfiguration result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.intellif.ifai.config.DoorOtherConfiguration buildPartial() {
      com.intellif.ifai.config.DoorOtherConfiguration result = new com.intellif.ifai.config.DoorOtherConfiguration(this);
      result.whiteLightMode_ = whiteLightMode_;
      if (whiteLightTimeBuilder_ == null) {
        result.whiteLightTime_ = whiteLightTime_;
      } else {
        result.whiteLightTime_ = whiteLightTimeBuilder_.build();
      }
      result.volume_ = volume_;
      result.livenessThreshold_ = livenessThreshold_;
      result.qualityThreshold_ = qualityThreshold_;
      result.minFaceSize_ = minFaceSize_;
      result.maxFaceSize_ = maxFaceSize_;
      result.recogInterval_ = recogInterval_;
      result.strangerTimes_ = strangerTimes_;
      result.saveOffline_ = saveOffline_;
      result.picUploadType_ = picUploadType_;
      result.hExpandCoff_ = hExpandCoff_;
      result.vExpandCoff_ = vExpandCoff_;
      result.picQuality_ = picQuality_;
      result.nameShowWay_ = nameShowWay_;
      result.wifiAccount_ = wifiAccount_;
      result.wifiPasswd_ = wifiPasswd_;
      result.language_ = language_;
      result.qrCodeDeviceType_ = qrCodeDeviceType_;
      result.successVoiceStyle_ = successVoiceStyle_;
      result.successShowStyle_ = successShowStyle_;
      result.faceRectRate_ = faceRectRate_;
      result.picNoiseDet_ = picNoiseDet_;
      result.facePoseDet_ = facePoseDet_;
      result.regWithNoMask_ = regWithNoMask_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.intellif.ifai.config.DoorOtherConfiguration) {
        return mergeFrom((com.intellif.ifai.config.DoorOtherConfiguration)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.intellif.ifai.config.DoorOtherConfiguration other) {
      if (other == com.intellif.ifai.config.DoorOtherConfiguration.getDefaultInstance()) return this;
      if (other.getWhiteLightMode() != 0) {
        setWhiteLightMode(other.getWhiteLightMode());
      }
      if (other.hasWhiteLightTime()) {
        mergeWhiteLightTime(other.getWhiteLightTime());
      }
      if (other.getVolume() != 0) {
        setVolume(other.getVolume());
      }
      if (other.getLivenessThreshold() != 0F) {
        setLivenessThreshold(other.getLivenessThreshold());
      }
      if (other.getQualityThreshold() != 0F) {
        setQualityThreshold(other.getQualityThreshold());
      }
      if (other.getMinFaceSize() != 0) {
        setMinFaceSize(other.getMinFaceSize());
      }
      if (other.getMaxFaceSize() != 0) {
        setMaxFaceSize(other.getMaxFaceSize());
      }
      if (other.getRecogInterval() != 0) {
        setRecogInterval(other.getRecogInterval());
      }
      if (other.getStrangerTimes() != 0) {
        setStrangerTimes(other.getStrangerTimes());
      }
      if (other.getSaveOffline() != false) {
        setSaveOffline(other.getSaveOffline());
      }
      if (other.getPicUploadType() != 0) {
        setPicUploadType(other.getPicUploadType());
      }
      if (other.getHExpandCoff() != 0) {
        setHExpandCoff(other.getHExpandCoff());
      }
      if (other.getVExpandCoff() != 0) {
        setVExpandCoff(other.getVExpandCoff());
      }
      if (other.getPicQuality() != 0) {
        setPicQuality(other.getPicQuality());
      }
      if (other.getNameShowWay() != 0) {
        setNameShowWay(other.getNameShowWay());
      }
      if (!other.getWifiAccount().isEmpty()) {
        wifiAccount_ = other.wifiAccount_;
        onChanged();
      }
      if (!other.getWifiPasswd().isEmpty()) {
        wifiPasswd_ = other.wifiPasswd_;
        onChanged();
      }
      if (other.getLanguage() != 0) {
        setLanguage(other.getLanguage());
      }
      if (other.getQrCodeDeviceType() != 0) {
        setQrCodeDeviceType(other.getQrCodeDeviceType());
      }
      if (other.getSuccessVoiceStyle() != 0) {
        setSuccessVoiceStyle(other.getSuccessVoiceStyle());
      }
      if (other.getSuccessShowStyle() != 0) {
        setSuccessShowStyle(other.getSuccessShowStyle());
      }
      if (other.getFaceRectRate() != 0) {
        setFaceRectRate(other.getFaceRectRate());
      }
      if (other.getPicNoiseDet() != false) {
        setPicNoiseDet(other.getPicNoiseDet());
      }
      if (other.getFacePoseDet() != false) {
        setFacePoseDet(other.getFacePoseDet());
      }
      if (other.getRegWithNoMask() != false) {
        setRegWithNoMask(other.getRegWithNoMask());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.intellif.ifai.config.DoorOtherConfiguration parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.intellif.ifai.config.DoorOtherConfiguration) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int whiteLightMode_ ;
    /**
     * <pre>
     *补光灯模式 1-人脸控制 2-时间控制
     * </pre>
     *
     * <code>int32 whiteLight_mode = 1;</code>
     */
    public int getWhiteLightMode() {
      return whiteLightMode_;
    }
    /**
     * <pre>
     *补光灯模式 1-人脸控制 2-时间控制
     * </pre>
     *
     * <code>int32 whiteLight_mode = 1;</code>
     */
    public Builder setWhiteLightMode(int value) {
      
      whiteLightMode_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *补光灯模式 1-人脸控制 2-时间控制
     * </pre>
     *
     * <code>int32 whiteLight_mode = 1;</code>
     */
    public Builder clearWhiteLightMode() {
      
      whiteLightMode_ = 0;
      onChanged();
      return this;
    }

    private com.intellif.ifai.common.TimePeriod whiteLightTime_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.intellif.ifai.common.TimePeriod, com.intellif.ifai.common.TimePeriod.Builder, com.intellif.ifai.common.TimePeriodOrBuilder> whiteLightTimeBuilder_;
    /**
     * <pre>
     *补光灯开启关闭时间
     * </pre>
     *
     * <code>.Ifaipb.TimePeriod whiteLight_time = 2;</code>
     */
    public boolean hasWhiteLightTime() {
      return whiteLightTimeBuilder_ != null || whiteLightTime_ != null;
    }
    /**
     * <pre>
     *补光灯开启关闭时间
     * </pre>
     *
     * <code>.Ifaipb.TimePeriod whiteLight_time = 2;</code>
     */
    public com.intellif.ifai.common.TimePeriod getWhiteLightTime() {
      if (whiteLightTimeBuilder_ == null) {
        return whiteLightTime_ == null ? com.intellif.ifai.common.TimePeriod.getDefaultInstance() : whiteLightTime_;
      } else {
        return whiteLightTimeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     *补光灯开启关闭时间
     * </pre>
     *
     * <code>.Ifaipb.TimePeriod whiteLight_time = 2;</code>
     */
    public Builder setWhiteLightTime(com.intellif.ifai.common.TimePeriod value) {
      if (whiteLightTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        whiteLightTime_ = value;
        onChanged();
      } else {
        whiteLightTimeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     *补光灯开启关闭时间
     * </pre>
     *
     * <code>.Ifaipb.TimePeriod whiteLight_time = 2;</code>
     */
    public Builder setWhiteLightTime(
        com.intellif.ifai.common.TimePeriod.Builder builderForValue) {
      if (whiteLightTimeBuilder_ == null) {
        whiteLightTime_ = builderForValue.build();
        onChanged();
      } else {
        whiteLightTimeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     *补光灯开启关闭时间
     * </pre>
     *
     * <code>.Ifaipb.TimePeriod whiteLight_time = 2;</code>
     */
    public Builder mergeWhiteLightTime(com.intellif.ifai.common.TimePeriod value) {
      if (whiteLightTimeBuilder_ == null) {
        if (whiteLightTime_ != null) {
          whiteLightTime_ =
            com.intellif.ifai.common.TimePeriod.newBuilder(whiteLightTime_).mergeFrom(value).buildPartial();
        } else {
          whiteLightTime_ = value;
        }
        onChanged();
      } else {
        whiteLightTimeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     *补光灯开启关闭时间
     * </pre>
     *
     * <code>.Ifaipb.TimePeriod whiteLight_time = 2;</code>
     */
    public Builder clearWhiteLightTime() {
      if (whiteLightTimeBuilder_ == null) {
        whiteLightTime_ = null;
        onChanged();
      } else {
        whiteLightTime_ = null;
        whiteLightTimeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     *补光灯开启关闭时间
     * </pre>
     *
     * <code>.Ifaipb.TimePeriod whiteLight_time = 2;</code>
     */
    public com.intellif.ifai.common.TimePeriod.Builder getWhiteLightTimeBuilder() {
      
      onChanged();
      return getWhiteLightTimeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *补光灯开启关闭时间
     * </pre>
     *
     * <code>.Ifaipb.TimePeriod whiteLight_time = 2;</code>
     */
    public com.intellif.ifai.common.TimePeriodOrBuilder getWhiteLightTimeOrBuilder() {
      if (whiteLightTimeBuilder_ != null) {
        return whiteLightTimeBuilder_.getMessageOrBuilder();
      } else {
        return whiteLightTime_ == null ?
            com.intellif.ifai.common.TimePeriod.getDefaultInstance() : whiteLightTime_;
      }
    }
    /**
     * <pre>
     *补光灯开启关闭时间
     * </pre>
     *
     * <code>.Ifaipb.TimePeriod whiteLight_time = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.intellif.ifai.common.TimePeriod, com.intellif.ifai.common.TimePeriod.Builder, com.intellif.ifai.common.TimePeriodOrBuilder> 
        getWhiteLightTimeFieldBuilder() {
      if (whiteLightTimeBuilder_ == null) {
        whiteLightTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.intellif.ifai.common.TimePeriod, com.intellif.ifai.common.TimePeriod.Builder, com.intellif.ifai.common.TimePeriodOrBuilder>(
                getWhiteLightTime(),
                getParentForChildren(),
                isClean());
        whiteLightTime_ = null;
      }
      return whiteLightTimeBuilder_;
    }

    private int volume_ ;
    /**
     * <pre>
     *音量 0-255
     * </pre>
     *
     * <code>int32 volume = 3;</code>
     */
    public int getVolume() {
      return volume_;
    }
    /**
     * <pre>
     *音量 0-255
     * </pre>
     *
     * <code>int32 volume = 3;</code>
     */
    public Builder setVolume(int value) {
      
      volume_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *音量 0-255
     * </pre>
     *
     * <code>int32 volume = 3;</code>
     */
    public Builder clearVolume() {
      
      volume_ = 0;
      onChanged();
      return this;
    }

    private float livenessThreshold_ ;
    /**
     * <pre>
     *活体阈值
     * </pre>
     *
     * <code>float liveness_threshold = 4;</code>
     */
    public float getLivenessThreshold() {
      return livenessThreshold_;
    }
    /**
     * <pre>
     *活体阈值
     * </pre>
     *
     * <code>float liveness_threshold = 4;</code>
     */
    public Builder setLivenessThreshold(float value) {
      
      livenessThreshold_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *活体阈值
     * </pre>
     *
     * <code>float liveness_threshold = 4;</code>
     */
    public Builder clearLivenessThreshold() {
      
      livenessThreshold_ = 0F;
      onChanged();
      return this;
    }

    private float qualityThreshold_ ;
    /**
     * <pre>
     *质量阈值
     * </pre>
     *
     * <code>float quality_threshold = 5;</code>
     */
    public float getQualityThreshold() {
      return qualityThreshold_;
    }
    /**
     * <pre>
     *质量阈值
     * </pre>
     *
     * <code>float quality_threshold = 5;</code>
     */
    public Builder setQualityThreshold(float value) {
      
      qualityThreshold_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *质量阈值
     * </pre>
     *
     * <code>float quality_threshold = 5;</code>
     */
    public Builder clearQualityThreshold() {
      
      qualityThreshold_ = 0F;
      onChanged();
      return this;
    }

    private int minFaceSize_ ;
    /**
     * <pre>
     *最小人脸像素
     * </pre>
     *
     * <code>int32 minFaceSize = 6;</code>
     */
    public int getMinFaceSize() {
      return minFaceSize_;
    }
    /**
     * <pre>
     *最小人脸像素
     * </pre>
     *
     * <code>int32 minFaceSize = 6;</code>
     */
    public Builder setMinFaceSize(int value) {
      
      minFaceSize_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *最小人脸像素
     * </pre>
     *
     * <code>int32 minFaceSize = 6;</code>
     */
    public Builder clearMinFaceSize() {
      
      minFaceSize_ = 0;
      onChanged();
      return this;
    }

    private int maxFaceSize_ ;
    /**
     * <pre>
     *最大人脸像素
     * </pre>
     *
     * <code>int32 maxFaceSize = 7;</code>
     */
    public int getMaxFaceSize() {
      return maxFaceSize_;
    }
    /**
     * <pre>
     *最大人脸像素
     * </pre>
     *
     * <code>int32 maxFaceSize = 7;</code>
     */
    public Builder setMaxFaceSize(int value) {
      
      maxFaceSize_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *最大人脸像素
     * </pre>
     *
     * <code>int32 maxFaceSize = 7;</code>
     */
    public Builder clearMaxFaceSize() {
      
      maxFaceSize_ = 0;
      onChanged();
      return this;
    }

    private int recogInterval_ ;
    /**
     * <pre>
     *识别间隔 
     * </pre>
     *
     * <code>int32 recogInterval = 8;</code>
     */
    public int getRecogInterval() {
      return recogInterval_;
    }
    /**
     * <pre>
     *识别间隔 
     * </pre>
     *
     * <code>int32 recogInterval = 8;</code>
     */
    public Builder setRecogInterval(int value) {
      
      recogInterval_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *识别间隔 
     * </pre>
     *
     * <code>int32 recogInterval = 8;</code>
     */
    public Builder clearRecogInterval() {
      
      recogInterval_ = 0;
      onChanged();
      return this;
    }

    private int strangerTimes_ ;
    /**
     * <pre>
     *陌生人比对次数
     * </pre>
     *
     * <code>int32 strangerTimes = 9;</code>
     */
    public int getStrangerTimes() {
      return strangerTimes_;
    }
    /**
     * <pre>
     *陌生人比对次数
     * </pre>
     *
     * <code>int32 strangerTimes = 9;</code>
     */
    public Builder setStrangerTimes(int value) {
      
      strangerTimes_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *陌生人比对次数
     * </pre>
     *
     * <code>int32 strangerTimes = 9;</code>
     */
    public Builder clearStrangerTimes() {
      
      strangerTimes_ = 0;
      onChanged();
      return this;
    }

    private boolean saveOffline_ ;
    /**
     * <pre>
     *离线保存开关
     * </pre>
     *
     * <code>bool saveOffline = 10;</code>
     */
    public boolean getSaveOffline() {
      return saveOffline_;
    }
    /**
     * <pre>
     *离线保存开关
     * </pre>
     *
     * <code>bool saveOffline = 10;</code>
     */
    public Builder setSaveOffline(boolean value) {
      
      saveOffline_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *离线保存开关
     * </pre>
     *
     * <code>bool saveOffline = 10;</code>
     */
    public Builder clearSaveOffline() {
      
      saveOffline_ = false;
      onChanged();
      return this;
    }

    private int picUploadType_ ;
    /**
     * <pre>
     *图片上报类型 0-不上传 1-人脸图 2-背景图 3-人脸+背景
     * </pre>
     *
     * <code>int32 picUploadType = 11;</code>
     */
    public int getPicUploadType() {
      return picUploadType_;
    }
    /**
     * <pre>
     *图片上报类型 0-不上传 1-人脸图 2-背景图 3-人脸+背景
     * </pre>
     *
     * <code>int32 picUploadType = 11;</code>
     */
    public Builder setPicUploadType(int value) {
      
      picUploadType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *图片上报类型 0-不上传 1-人脸图 2-背景图 3-人脸+背景
     * </pre>
     *
     * <code>int32 picUploadType = 11;</code>
     */
    public Builder clearPicUploadType() {
      
      picUploadType_ = 0;
      onChanged();
      return this;
    }

    private int hExpandCoff_ ;
    /**
     * <pre>
     *水平扩展系数 0-10
     * </pre>
     *
     * <code>int32 hExpandCoff = 12;</code>
     */
    public int getHExpandCoff() {
      return hExpandCoff_;
    }
    /**
     * <pre>
     *水平扩展系数 0-10
     * </pre>
     *
     * <code>int32 hExpandCoff = 12;</code>
     */
    public Builder setHExpandCoff(int value) {
      
      hExpandCoff_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *水平扩展系数 0-10
     * </pre>
     *
     * <code>int32 hExpandCoff = 12;</code>
     */
    public Builder clearHExpandCoff() {
      
      hExpandCoff_ = 0;
      onChanged();
      return this;
    }

    private int vExpandCoff_ ;
    /**
     * <pre>
     *垂直扩展系数 0-10
     * </pre>
     *
     * <code>int32 vExpandCoff = 13;</code>
     */
    public int getVExpandCoff() {
      return vExpandCoff_;
    }
    /**
     * <pre>
     *垂直扩展系数 0-10
     * </pre>
     *
     * <code>int32 vExpandCoff = 13;</code>
     */
    public Builder setVExpandCoff(int value) {
      
      vExpandCoff_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *垂直扩展系数 0-10
     * </pre>
     *
     * <code>int32 vExpandCoff = 13;</code>
     */
    public Builder clearVExpandCoff() {
      
      vExpandCoff_ = 0;
      onChanged();
      return this;
    }

    private int picQuality_ ;
    /**
     * <pre>
     *图片编码质量 1-100
     * </pre>
     *
     * <code>int32 picQuality = 14;</code>
     */
    public int getPicQuality() {
      return picQuality_;
    }
    /**
     * <pre>
     *图片编码质量 1-100
     * </pre>
     *
     * <code>int32 picQuality = 14;</code>
     */
    public Builder setPicQuality(int value) {
      
      picQuality_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *图片编码质量 1-100
     * </pre>
     *
     * <code>int32 picQuality = 14;</code>
     */
    public Builder clearPicQuality() {
      
      picQuality_ = 0;
      onChanged();
      return this;
    }

    private int nameShowWay_ ;
    /**
     * <pre>
     *0-**字 1-全名 2-字字* 20200702
     * </pre>
     *
     * <code>int32 nameShowWay = 15;</code>
     */
    public int getNameShowWay() {
      return nameShowWay_;
    }
    /**
     * <pre>
     *0-**字 1-全名 2-字字* 20200702
     * </pre>
     *
     * <code>int32 nameShowWay = 15;</code>
     */
    public Builder setNameShowWay(int value) {
      
      nameShowWay_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *0-**字 1-全名 2-字字* 20200702
     * </pre>
     *
     * <code>int32 nameShowWay = 15;</code>
     */
    public Builder clearNameShowWay() {
      
      nameShowWay_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object wifiAccount_ = "";
    /**
     * <pre>
     *wifi账号
     * </pre>
     *
     * <code>string wifi_account = 16;</code>
     */
    public java.lang.String getWifiAccount() {
      java.lang.Object ref = wifiAccount_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        wifiAccount_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *wifi账号
     * </pre>
     *
     * <code>string wifi_account = 16;</code>
     */
    public com.google.protobuf.ByteString
        getWifiAccountBytes() {
      java.lang.Object ref = wifiAccount_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        wifiAccount_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *wifi账号
     * </pre>
     *
     * <code>string wifi_account = 16;</code>
     */
    public Builder setWifiAccount(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      wifiAccount_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *wifi账号
     * </pre>
     *
     * <code>string wifi_account = 16;</code>
     */
    public Builder clearWifiAccount() {
      
      wifiAccount_ = getDefaultInstance().getWifiAccount();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *wifi账号
     * </pre>
     *
     * <code>string wifi_account = 16;</code>
     */
    public Builder setWifiAccountBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      wifiAccount_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object wifiPasswd_ = "";
    /**
     * <pre>
     *wifi密码
     * </pre>
     *
     * <code>string wifi_passwd = 17;</code>
     */
    public java.lang.String getWifiPasswd() {
      java.lang.Object ref = wifiPasswd_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        wifiPasswd_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *wifi密码
     * </pre>
     *
     * <code>string wifi_passwd = 17;</code>
     */
    public com.google.protobuf.ByteString
        getWifiPasswdBytes() {
      java.lang.Object ref = wifiPasswd_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        wifiPasswd_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *wifi密码
     * </pre>
     *
     * <code>string wifi_passwd = 17;</code>
     */
    public Builder setWifiPasswd(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      wifiPasswd_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *wifi密码
     * </pre>
     *
     * <code>string wifi_passwd = 17;</code>
     */
    public Builder clearWifiPasswd() {
      
      wifiPasswd_ = getDefaultInstance().getWifiPasswd();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *wifi密码
     * </pre>
     *
     * <code>string wifi_passwd = 17;</code>
     */
    public Builder setWifiPasswdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      wifiPasswd_ = value;
      onChanged();
      return this;
    }

    private int language_ ;
    /**
     * <pre>
     *设备语言 0-中文 1-英文 20200724 
     * </pre>
     *
     * <code>int32 language = 18;</code>
     */
    public int getLanguage() {
      return language_;
    }
    /**
     * <pre>
     *设备语言 0-中文 1-英文 20200724 
     * </pre>
     *
     * <code>int32 language = 18;</code>
     */
    public Builder setLanguage(int value) {
      
      language_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *设备语言 0-中文 1-英文 20200724 
     * </pre>
     *
     * <code>int32 language = 18;</code>
     */
    public Builder clearLanguage() {
      
      language_ = 0;
      onChanged();
      return this;
    }

    private int qrCodeDeviceType_ ;
    /**
     * <pre>
     *0代表摄像头，1 2 3代表模块,1-牛图，2- 塞伯羅斯,3-微光互联，
     * </pre>
     *
     * <code>int32 qrCodeDeviceType = 19;</code>
     */
    public int getQrCodeDeviceType() {
      return qrCodeDeviceType_;
    }
    /**
     * <pre>
     *0代表摄像头，1 2 3代表模块,1-牛图，2- 塞伯羅斯,3-微光互联，
     * </pre>
     *
     * <code>int32 qrCodeDeviceType = 19;</code>
     */
    public Builder setQrCodeDeviceType(int value) {
      
      qrCodeDeviceType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *0代表摄像头，1 2 3代表模块,1-牛图，2- 塞伯羅斯,3-微光互联，
     * </pre>
     *
     * <code>int32 qrCodeDeviceType = 19;</code>
     */
    public Builder clearQrCodeDeviceType() {
      
      qrCodeDeviceType_ = 0;
      onChanged();
      return this;
    }

    private int successVoiceStyle_ ;
    /**
     * <pre>
     *鉴权通过后的语言播报类型
     * </pre>
     *
     * <code>int32 successVoiceStyle = 20;</code>
     */
    public int getSuccessVoiceStyle() {
      return successVoiceStyle_;
    }
    /**
     * <pre>
     *鉴权通过后的语言播报类型
     * </pre>
     *
     * <code>int32 successVoiceStyle = 20;</code>
     */
    public Builder setSuccessVoiceStyle(int value) {
      
      successVoiceStyle_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *鉴权通过后的语言播报类型
     * </pre>
     *
     * <code>int32 successVoiceStyle = 20;</code>
     */
    public Builder clearSuccessVoiceStyle() {
      
      successVoiceStyle_ = 0;
      onChanged();
      return this;
    }

    private int successShowStyle_ ;
    /**
     * <pre>
     *鉴权通过后显示的类型
     * </pre>
     *
     * <code>int32 successShowStyle = 21;</code>
     */
    public int getSuccessShowStyle() {
      return successShowStyle_;
    }
    /**
     * <pre>
     *鉴权通过后显示的类型
     * </pre>
     *
     * <code>int32 successShowStyle = 21;</code>
     */
    public Builder setSuccessShowStyle(int value) {
      
      successShowStyle_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *鉴权通过后显示的类型
     * </pre>
     *
     * <code>int32 successShowStyle = 21;</code>
     */
    public Builder clearSuccessShowStyle() {
      
      successShowStyle_ = 0;
      onChanged();
      return this;
    }

    private int faceRectRate_ ;
    /**
     * <pre>
     *人脸框显示比例-海康测温模组使用 20201014
     * </pre>
     *
     * <code>int32 faceRectRate = 22;</code>
     */
    public int getFaceRectRate() {
      return faceRectRate_;
    }
    /**
     * <pre>
     *人脸框显示比例-海康测温模组使用 20201014
     * </pre>
     *
     * <code>int32 faceRectRate = 22;</code>
     */
    public Builder setFaceRectRate(int value) {
      
      faceRectRate_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *人脸框显示比例-海康测温模组使用 20201014
     * </pre>
     *
     * <code>int32 faceRectRate = 22;</code>
     */
    public Builder clearFaceRectRate() {
      
      faceRectRate_ = 0;
      onChanged();
      return this;
    }

    private boolean picNoiseDet_ ;
    /**
     * <pre>
     *噪声检测开关，默认开 20201021 
     * </pre>
     *
     * <code>bool picNoiseDet = 23;</code>
     */
    public boolean getPicNoiseDet() {
      return picNoiseDet_;
    }
    /**
     * <pre>
     *噪声检测开关，默认开 20201021 
     * </pre>
     *
     * <code>bool picNoiseDet = 23;</code>
     */
    public Builder setPicNoiseDet(boolean value) {
      
      picNoiseDet_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *噪声检测开关，默认开 20201021 
     * </pre>
     *
     * <code>bool picNoiseDet = 23;</code>
     */
    public Builder clearPicNoiseDet() {
      
      picNoiseDet_ = false;
      onChanged();
      return this;
    }

    private boolean facePoseDet_ ;
    /**
     * <pre>
     *人脸角度检测开关，默认开 20201021
     * </pre>
     *
     * <code>bool facePoseDet = 24;</code>
     */
    public boolean getFacePoseDet() {
      return facePoseDet_;
    }
    /**
     * <pre>
     *人脸角度检测开关，默认开 20201021
     * </pre>
     *
     * <code>bool facePoseDet = 24;</code>
     */
    public Builder setFacePoseDet(boolean value) {
      
      facePoseDet_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *人脸角度检测开关，默认开 20201021
     * </pre>
     *
     * <code>bool facePoseDet = 24;</code>
     */
    public Builder clearFacePoseDet() {
      
      facePoseDet_ = false;
      onChanged();
      return this;
    }

    private boolean regWithNoMask_ ;
    /**
     * <pre>
     *摘口罩识别，默认关 20201021
     * </pre>
     *
     * <code>bool regWithNoMask = 25;</code>
     */
    public boolean getRegWithNoMask() {
      return regWithNoMask_;
    }
    /**
     * <pre>
     *摘口罩识别，默认关 20201021
     * </pre>
     *
     * <code>bool regWithNoMask = 25;</code>
     */
    public Builder setRegWithNoMask(boolean value) {
      
      regWithNoMask_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *摘口罩识别，默认关 20201021
     * </pre>
     *
     * <code>bool regWithNoMask = 25;</code>
     */
    public Builder clearRegWithNoMask() {
      
      regWithNoMask_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:Ifaipb.DoorOtherConfiguration)
  }

  // @@protoc_insertion_point(class_scope:Ifaipb.DoorOtherConfiguration)
  private static final com.intellif.ifai.config.DoorOtherConfiguration DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.intellif.ifai.config.DoorOtherConfiguration();
  }

  public static com.intellif.ifai.config.DoorOtherConfiguration getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DoorOtherConfiguration>
      PARSER = new com.google.protobuf.AbstractParser<DoorOtherConfiguration>() {
    @java.lang.Override
    public DoorOtherConfiguration parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new DoorOtherConfiguration(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<DoorOtherConfiguration> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DoorOtherConfiguration> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.intellif.ifai.config.DoorOtherConfiguration getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

