// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: IfPadVideoIntercom.proto

package com.intellif.ifai.padVideoIntercom;

/**
 * <pre>
 *操作结果返回码
 * </pre>
 *
 * Protobuf enum {@code Ifaipb.ResultCode}
 */
public enum ResultCode
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   *操作成功
   * </pre>
   *
   * <code>OperateSuccess = 0;</code>
   */
  OperateSuccess(0),
  /**
   * <pre>
   *通话记录不存在
   * </pre>
   *
   * <code>RecordNotExists = 1;</code>
   */
  RecordNotExists(1),
  /**
   * <pre>
   *通话记录状态异常
   * </pre>
   *
   * <code>RecordStateError = 2;</code>
   */
  RecordStateError(2),
  /**
   * <pre>
   *平台服务异常
   * </pre>
   *
   * <code>PlatformError = 3;</code>
   */
  PlatformError(3),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   *操作成功
   * </pre>
   *
   * <code>OperateSuccess = 0;</code>
   */
  public static final int OperateSuccess_VALUE = 0;
  /**
   * <pre>
   *通话记录不存在
   * </pre>
   *
   * <code>RecordNotExists = 1;</code>
   */
  public static final int RecordNotExists_VALUE = 1;
  /**
   * <pre>
   *通话记录状态异常
   * </pre>
   *
   * <code>RecordStateError = 2;</code>
   */
  public static final int RecordStateError_VALUE = 2;
  /**
   * <pre>
   *平台服务异常
   * </pre>
   *
   * <code>PlatformError = 3;</code>
   */
  public static final int PlatformError_VALUE = 3;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @Deprecated
  public static ResultCode valueOf(int value) {
    return forNumber(value);
  }

  public static ResultCode forNumber(int value) {
    switch (value) {
      case 0: return OperateSuccess;
      case 1: return RecordNotExists;
      case 2: return RecordStateError;
      case 3: return PlatformError;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ResultCode>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ResultCode> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ResultCode>() {
          public ResultCode findValueByNumber(int number) {
            return ResultCode.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return Ifai.getDescriptor().getEnumTypes().get(0);
  }

  private static final ResultCode[] VALUES = values();

  public static ResultCode valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private ResultCode(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:Ifaipb.ResultCode)
}

