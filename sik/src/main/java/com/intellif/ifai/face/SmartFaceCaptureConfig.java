// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: IfAnalytics.proto

package com.intellif.ifai.face;

/**
 * <pre>
 *新增智能人脸抓拍参数
 * </pre>
 *
 * Protobuf type {@code Ifaipb.SmartFaceCaptureConfig}
 */
public  final class SmartFaceCaptureConfig extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:Ifaipb.SmartFaceCaptureConfig)
    SmartFaceCaptureConfigOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SmartFaceCaptureConfig.newBuilder() to construct.
  private SmartFaceCaptureConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SmartFaceCaptureConfig() {
    faceValue_ = 0;
    minPixel_ = 0;
    maxPixel_ = 0;
    sensitivity_ = 0;
    interval_ = 0;
    offlineImgType_ = 0;
    virPara_ = 0;
    horPara_ = 0;
    imgQuality_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private SmartFaceCaptureConfig(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            faceValue_ = input.readInt32();
            break;
          }
          case 16: {

            minPixel_ = input.readInt32();
            break;
          }
          case 24: {

            maxPixel_ = input.readInt32();
            break;
          }
          case 32: {

            sensitivity_ = input.readInt32();
            break;
          }
          case 40: {

            interval_ = input.readInt32();
            break;
          }
          case 48: {

            offlineImgType_ = input.readInt32();
            break;
          }
          case 56: {

            virPara_ = input.readInt32();
            break;
          }
          case 64: {

            horPara_ = input.readInt32();
            break;
          }
          case 72: {

            imgQuality_ = input.readInt32();
            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.intellif.ifai.face.Ifai.internal_static_Ifaipb_SmartFaceCaptureConfig_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.intellif.ifai.face.Ifai.internal_static_Ifaipb_SmartFaceCaptureConfig_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.intellif.ifai.face.SmartFaceCaptureConfig.class, com.intellif.ifai.face.SmartFaceCaptureConfig.Builder.class);
  }

  public static final int FACE_VALUE_FIELD_NUMBER = 1;
  private int faceValue_;
  /**
   * <pre>
   *正脸值[0-100]
   * </pre>
   *
   * <code>int32 face_value = 1;</code>
   */
  public int getFaceValue() {
    return faceValue_;
  }

  public static final int MIN_PIXEL_FIELD_NUMBER = 2;
  private int minPixel_;
  /**
   * <pre>
   *最小像素[30,300]
   * </pre>
   *
   * <code>int32 min_pixel = 2;</code>
   */
  public int getMinPixel() {
    return minPixel_;
  }

  public static final int MAX_PIXEL_FIELD_NUMBER = 3;
  private int maxPixel_;
  /**
   * <pre>
   *最大像素[300,500]
   * </pre>
   *
   * <code>int32 max_pixel = 3;</code>
   */
  public int getMaxPixel() {
    return maxPixel_;
  }

  public static final int SENSITIVITY_FIELD_NUMBER = 4;
  private int sensitivity_;
  /**
   * <pre>
   *抓拍灵敏度[0-100]
   * </pre>
   *
   * <code>int32 sensitivity = 4;</code>
   */
  public int getSensitivity() {
    return sensitivity_;
  }

  public static final int INTERVAL_FIELD_NUMBER = 5;
  private int interval_;
  /**
   * <pre>
   *离开间隔[1-10]
   * </pre>
   *
   * <code>int32 interval = 5;</code>
   */
  public int getInterval() {
    return interval_;
  }

  public static final int OFFLINE_IMG_TYPE_FIELD_NUMBER = 6;
  private int offlineImgType_;
  /**
   * <pre>
   *离线图片保持类型 [0不保存，人脸抓拍=1，人头抓拍=2，人体抓拍=4,人脸+人头=3， 人脸+人体=5， 人头+人体=6， 人脸+人头+人体=7]
   * </pre>
   *
   * <code>int32 offline_img_type = 6;</code>
   */
  public int getOfflineImgType() {
    return offlineImgType_;
  }

  public static final int VIR_PARA_FIELD_NUMBER = 7;
  private int virPara_;
  /**
   * <pre>
   *人脸垂直扩展参数[0,10]
   * </pre>
   *
   * <code>int32 vir_para = 7;</code>
   */
  public int getVirPara() {
    return virPara_;
  }

  public static final int HOR_PARA_FIELD_NUMBER = 8;
  private int horPara_;
  /**
   * <pre>
   *人脸水平扩展参数[0,10]
   * </pre>
   *
   * <code>int32 hor_para = 8;</code>
   */
  public int getHorPara() {
    return horPara_;
  }

  public static final int IMG_QUALITY_FIELD_NUMBER = 9;
  private int imgQuality_;
  /**
   * <pre>
   *图片质量[1-100]
   * </pre>
   *
   * <code>int32 img_quality = 9;</code>
   */
  public int getImgQuality() {
    return imgQuality_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (faceValue_ != 0) {
      output.writeInt32(1, faceValue_);
    }
    if (minPixel_ != 0) {
      output.writeInt32(2, minPixel_);
    }
    if (maxPixel_ != 0) {
      output.writeInt32(3, maxPixel_);
    }
    if (sensitivity_ != 0) {
      output.writeInt32(4, sensitivity_);
    }
    if (interval_ != 0) {
      output.writeInt32(5, interval_);
    }
    if (offlineImgType_ != 0) {
      output.writeInt32(6, offlineImgType_);
    }
    if (virPara_ != 0) {
      output.writeInt32(7, virPara_);
    }
    if (horPara_ != 0) {
      output.writeInt32(8, horPara_);
    }
    if (imgQuality_ != 0) {
      output.writeInt32(9, imgQuality_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (faceValue_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, faceValue_);
    }
    if (minPixel_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, minPixel_);
    }
    if (maxPixel_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, maxPixel_);
    }
    if (sensitivity_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, sensitivity_);
    }
    if (interval_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, interval_);
    }
    if (offlineImgType_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, offlineImgType_);
    }
    if (virPara_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, virPara_);
    }
    if (horPara_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(8, horPara_);
    }
    if (imgQuality_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(9, imgQuality_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.intellif.ifai.face.SmartFaceCaptureConfig)) {
      return super.equals(obj);
    }
    com.intellif.ifai.face.SmartFaceCaptureConfig other = (com.intellif.ifai.face.SmartFaceCaptureConfig) obj;

    boolean result = true;
    result = result && (getFaceValue()
        == other.getFaceValue());
    result = result && (getMinPixel()
        == other.getMinPixel());
    result = result && (getMaxPixel()
        == other.getMaxPixel());
    result = result && (getSensitivity()
        == other.getSensitivity());
    result = result && (getInterval()
        == other.getInterval());
    result = result && (getOfflineImgType()
        == other.getOfflineImgType());
    result = result && (getVirPara()
        == other.getVirPara());
    result = result && (getHorPara()
        == other.getHorPara());
    result = result && (getImgQuality()
        == other.getImgQuality());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + FACE_VALUE_FIELD_NUMBER;
    hash = (53 * hash) + getFaceValue();
    hash = (37 * hash) + MIN_PIXEL_FIELD_NUMBER;
    hash = (53 * hash) + getMinPixel();
    hash = (37 * hash) + MAX_PIXEL_FIELD_NUMBER;
    hash = (53 * hash) + getMaxPixel();
    hash = (37 * hash) + SENSITIVITY_FIELD_NUMBER;
    hash = (53 * hash) + getSensitivity();
    hash = (37 * hash) + INTERVAL_FIELD_NUMBER;
    hash = (53 * hash) + getInterval();
    hash = (37 * hash) + OFFLINE_IMG_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + getOfflineImgType();
    hash = (37 * hash) + VIR_PARA_FIELD_NUMBER;
    hash = (53 * hash) + getVirPara();
    hash = (37 * hash) + HOR_PARA_FIELD_NUMBER;
    hash = (53 * hash) + getHorPara();
    hash = (37 * hash) + IMG_QUALITY_FIELD_NUMBER;
    hash = (53 * hash) + getImgQuality();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.intellif.ifai.face.SmartFaceCaptureConfig parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.intellif.ifai.face.SmartFaceCaptureConfig parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.intellif.ifai.face.SmartFaceCaptureConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.intellif.ifai.face.SmartFaceCaptureConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.intellif.ifai.face.SmartFaceCaptureConfig parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.intellif.ifai.face.SmartFaceCaptureConfig parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.intellif.ifai.face.SmartFaceCaptureConfig parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.intellif.ifai.face.SmartFaceCaptureConfig parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.intellif.ifai.face.SmartFaceCaptureConfig parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.intellif.ifai.face.SmartFaceCaptureConfig parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.intellif.ifai.face.SmartFaceCaptureConfig parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.intellif.ifai.face.SmartFaceCaptureConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.intellif.ifai.face.SmartFaceCaptureConfig prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   *新增智能人脸抓拍参数
   * </pre>
   *
   * Protobuf type {@code Ifaipb.SmartFaceCaptureConfig}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:Ifaipb.SmartFaceCaptureConfig)
      com.intellif.ifai.face.SmartFaceCaptureConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.intellif.ifai.face.Ifai.internal_static_Ifaipb_SmartFaceCaptureConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.intellif.ifai.face.Ifai.internal_static_Ifaipb_SmartFaceCaptureConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.intellif.ifai.face.SmartFaceCaptureConfig.class, com.intellif.ifai.face.SmartFaceCaptureConfig.Builder.class);
    }

    // Construct using com.intellif.ifai.face.SmartFaceCaptureConfig.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      faceValue_ = 0;

      minPixel_ = 0;

      maxPixel_ = 0;

      sensitivity_ = 0;

      interval_ = 0;

      offlineImgType_ = 0;

      virPara_ = 0;

      horPara_ = 0;

      imgQuality_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.intellif.ifai.face.Ifai.internal_static_Ifaipb_SmartFaceCaptureConfig_descriptor;
    }

    @java.lang.Override
    public com.intellif.ifai.face.SmartFaceCaptureConfig getDefaultInstanceForType() {
      return com.intellif.ifai.face.SmartFaceCaptureConfig.getDefaultInstance();
    }

    @java.lang.Override
    public com.intellif.ifai.face.SmartFaceCaptureConfig build() {
      com.intellif.ifai.face.SmartFaceCaptureConfig result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.intellif.ifai.face.SmartFaceCaptureConfig buildPartial() {
      com.intellif.ifai.face.SmartFaceCaptureConfig result = new com.intellif.ifai.face.SmartFaceCaptureConfig(this);
      result.faceValue_ = faceValue_;
      result.minPixel_ = minPixel_;
      result.maxPixel_ = maxPixel_;
      result.sensitivity_ = sensitivity_;
      result.interval_ = interval_;
      result.offlineImgType_ = offlineImgType_;
      result.virPara_ = virPara_;
      result.horPara_ = horPara_;
      result.imgQuality_ = imgQuality_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.intellif.ifai.face.SmartFaceCaptureConfig) {
        return mergeFrom((com.intellif.ifai.face.SmartFaceCaptureConfig)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.intellif.ifai.face.SmartFaceCaptureConfig other) {
      if (other == com.intellif.ifai.face.SmartFaceCaptureConfig.getDefaultInstance()) return this;
      if (other.getFaceValue() != 0) {
        setFaceValue(other.getFaceValue());
      }
      if (other.getMinPixel() != 0) {
        setMinPixel(other.getMinPixel());
      }
      if (other.getMaxPixel() != 0) {
        setMaxPixel(other.getMaxPixel());
      }
      if (other.getSensitivity() != 0) {
        setSensitivity(other.getSensitivity());
      }
      if (other.getInterval() != 0) {
        setInterval(other.getInterval());
      }
      if (other.getOfflineImgType() != 0) {
        setOfflineImgType(other.getOfflineImgType());
      }
      if (other.getVirPara() != 0) {
        setVirPara(other.getVirPara());
      }
      if (other.getHorPara() != 0) {
        setHorPara(other.getHorPara());
      }
      if (other.getImgQuality() != 0) {
        setImgQuality(other.getImgQuality());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.intellif.ifai.face.SmartFaceCaptureConfig parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.intellif.ifai.face.SmartFaceCaptureConfig) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int faceValue_ ;
    /**
     * <pre>
     *正脸值[0-100]
     * </pre>
     *
     * <code>int32 face_value = 1;</code>
     */
    public int getFaceValue() {
      return faceValue_;
    }
    /**
     * <pre>
     *正脸值[0-100]
     * </pre>
     *
     * <code>int32 face_value = 1;</code>
     */
    public Builder setFaceValue(int value) {
      
      faceValue_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *正脸值[0-100]
     * </pre>
     *
     * <code>int32 face_value = 1;</code>
     */
    public Builder clearFaceValue() {
      
      faceValue_ = 0;
      onChanged();
      return this;
    }

    private int minPixel_ ;
    /**
     * <pre>
     *最小像素[30,300]
     * </pre>
     *
     * <code>int32 min_pixel = 2;</code>
     */
    public int getMinPixel() {
      return minPixel_;
    }
    /**
     * <pre>
     *最小像素[30,300]
     * </pre>
     *
     * <code>int32 min_pixel = 2;</code>
     */
    public Builder setMinPixel(int value) {
      
      minPixel_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *最小像素[30,300]
     * </pre>
     *
     * <code>int32 min_pixel = 2;</code>
     */
    public Builder clearMinPixel() {
      
      minPixel_ = 0;
      onChanged();
      return this;
    }

    private int maxPixel_ ;
    /**
     * <pre>
     *最大像素[300,500]
     * </pre>
     *
     * <code>int32 max_pixel = 3;</code>
     */
    public int getMaxPixel() {
      return maxPixel_;
    }
    /**
     * <pre>
     *最大像素[300,500]
     * </pre>
     *
     * <code>int32 max_pixel = 3;</code>
     */
    public Builder setMaxPixel(int value) {
      
      maxPixel_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *最大像素[300,500]
     * </pre>
     *
     * <code>int32 max_pixel = 3;</code>
     */
    public Builder clearMaxPixel() {
      
      maxPixel_ = 0;
      onChanged();
      return this;
    }

    private int sensitivity_ ;
    /**
     * <pre>
     *抓拍灵敏度[0-100]
     * </pre>
     *
     * <code>int32 sensitivity = 4;</code>
     */
    public int getSensitivity() {
      return sensitivity_;
    }
    /**
     * <pre>
     *抓拍灵敏度[0-100]
     * </pre>
     *
     * <code>int32 sensitivity = 4;</code>
     */
    public Builder setSensitivity(int value) {
      
      sensitivity_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *抓拍灵敏度[0-100]
     * </pre>
     *
     * <code>int32 sensitivity = 4;</code>
     */
    public Builder clearSensitivity() {
      
      sensitivity_ = 0;
      onChanged();
      return this;
    }

    private int interval_ ;
    /**
     * <pre>
     *离开间隔[1-10]
     * </pre>
     *
     * <code>int32 interval = 5;</code>
     */
    public int getInterval() {
      return interval_;
    }
    /**
     * <pre>
     *离开间隔[1-10]
     * </pre>
     *
     * <code>int32 interval = 5;</code>
     */
    public Builder setInterval(int value) {
      
      interval_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *离开间隔[1-10]
     * </pre>
     *
     * <code>int32 interval = 5;</code>
     */
    public Builder clearInterval() {
      
      interval_ = 0;
      onChanged();
      return this;
    }

    private int offlineImgType_ ;
    /**
     * <pre>
     *离线图片保持类型 [0不保存，人脸抓拍=1，人头抓拍=2，人体抓拍=4,人脸+人头=3， 人脸+人体=5， 人头+人体=6， 人脸+人头+人体=7]
     * </pre>
     *
     * <code>int32 offline_img_type = 6;</code>
     */
    public int getOfflineImgType() {
      return offlineImgType_;
    }
    /**
     * <pre>
     *离线图片保持类型 [0不保存，人脸抓拍=1，人头抓拍=2，人体抓拍=4,人脸+人头=3， 人脸+人体=5， 人头+人体=6， 人脸+人头+人体=7]
     * </pre>
     *
     * <code>int32 offline_img_type = 6;</code>
     */
    public Builder setOfflineImgType(int value) {
      
      offlineImgType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *离线图片保持类型 [0不保存，人脸抓拍=1，人头抓拍=2，人体抓拍=4,人脸+人头=3， 人脸+人体=5， 人头+人体=6， 人脸+人头+人体=7]
     * </pre>
     *
     * <code>int32 offline_img_type = 6;</code>
     */
    public Builder clearOfflineImgType() {
      
      offlineImgType_ = 0;
      onChanged();
      return this;
    }

    private int virPara_ ;
    /**
     * <pre>
     *人脸垂直扩展参数[0,10]
     * </pre>
     *
     * <code>int32 vir_para = 7;</code>
     */
    public int getVirPara() {
      return virPara_;
    }
    /**
     * <pre>
     *人脸垂直扩展参数[0,10]
     * </pre>
     *
     * <code>int32 vir_para = 7;</code>
     */
    public Builder setVirPara(int value) {
      
      virPara_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *人脸垂直扩展参数[0,10]
     * </pre>
     *
     * <code>int32 vir_para = 7;</code>
     */
    public Builder clearVirPara() {
      
      virPara_ = 0;
      onChanged();
      return this;
    }

    private int horPara_ ;
    /**
     * <pre>
     *人脸水平扩展参数[0,10]
     * </pre>
     *
     * <code>int32 hor_para = 8;</code>
     */
    public int getHorPara() {
      return horPara_;
    }
    /**
     * <pre>
     *人脸水平扩展参数[0,10]
     * </pre>
     *
     * <code>int32 hor_para = 8;</code>
     */
    public Builder setHorPara(int value) {
      
      horPara_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *人脸水平扩展参数[0,10]
     * </pre>
     *
     * <code>int32 hor_para = 8;</code>
     */
    public Builder clearHorPara() {
      
      horPara_ = 0;
      onChanged();
      return this;
    }

    private int imgQuality_ ;
    /**
     * <pre>
     *图片质量[1-100]
     * </pre>
     *
     * <code>int32 img_quality = 9;</code>
     */
    public int getImgQuality() {
      return imgQuality_;
    }
    /**
     * <pre>
     *图片质量[1-100]
     * </pre>
     *
     * <code>int32 img_quality = 9;</code>
     */
    public Builder setImgQuality(int value) {
      
      imgQuality_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *图片质量[1-100]
     * </pre>
     *
     * <code>int32 img_quality = 9;</code>
     */
    public Builder clearImgQuality() {
      
      imgQuality_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:Ifaipb.SmartFaceCaptureConfig)
  }

  // @@protoc_insertion_point(class_scope:Ifaipb.SmartFaceCaptureConfig)
  private static final com.intellif.ifai.face.SmartFaceCaptureConfig DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.intellif.ifai.face.SmartFaceCaptureConfig();
  }

  public static com.intellif.ifai.face.SmartFaceCaptureConfig getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SmartFaceCaptureConfig>
      PARSER = new com.google.protobuf.AbstractParser<SmartFaceCaptureConfig>() {
    @java.lang.Override
    public SmartFaceCaptureConfig parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new SmartFaceCaptureConfig(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<SmartFaceCaptureConfig> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SmartFaceCaptureConfig> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.intellif.ifai.face.SmartFaceCaptureConfig getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

