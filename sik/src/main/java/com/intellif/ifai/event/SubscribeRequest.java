// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: IfEvent.proto

package com.intellif.ifai.event;

/**
 * Protobuf type {@code Ifaipb.SubscribeRequest}
 */
public  final class SubscribeRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:Ifaipb.SubscribeRequest)
    SubscribeRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SubscribeRequest.newBuilder() to construct.
  private SubscribeRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SubscribeRequest() {
    receiveAddress_ = "";
    receivePort_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private SubscribeRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            receiveAddress_ = s;
            break;
          }
          case 16: {

            receivePort_ = input.readInt32();
            break;
          }
          case 26: {
            com.intellif.ifai.event.FaceCaptureFilter.Builder subBuilder = null;
            if (faceCaptureFilter_ != null) {
              subBuilder = faceCaptureFilter_.toBuilder();
            }
            faceCaptureFilter_ = input.readMessage(com.intellif.ifai.event.FaceCaptureFilter.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(faceCaptureFilter_);
              faceCaptureFilter_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            com.intellif.ifai.event.ReportFilter.Builder subBuilder = null;
            if (reportFilter_ != null) {
              subBuilder = reportFilter_.toBuilder();
            }
            reportFilter_ = input.readMessage(com.intellif.ifai.event.ReportFilter.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(reportFilter_);
              reportFilter_ = subBuilder.buildPartial();
            }

            break;
          }
          case 42: {
            com.intellif.ifai.event.PassengerFlowFilter.Builder subBuilder = null;
            if (passengerFlowFilter_ != null) {
              subBuilder = passengerFlowFilter_.toBuilder();
            }
            passengerFlowFilter_ = input.readMessage(com.intellif.ifai.event.PassengerFlowFilter.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(passengerFlowFilter_);
              passengerFlowFilter_ = subBuilder.buildPartial();
            }

            break;
          }
          case 50: {
            com.intellif.ifai.common.CommonStatus.Builder subBuilder = null;
            if (noFaceCheck_ != null) {
              subBuilder = noFaceCheck_.toBuilder();
            }
            noFaceCheck_ = input.readMessage(com.intellif.ifai.common.CommonStatus.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(noFaceCheck_);
              noFaceCheck_ = subBuilder.buildPartial();
            }

            break;
          }
          case 58: {
            com.intellif.ifai.common.CommonStatus.Builder subBuilder = null;
            if (changeFaceCheck_ != null) {
              subBuilder = changeFaceCheck_.toBuilder();
            }
            changeFaceCheck_ = input.readMessage(com.intellif.ifai.common.CommonStatus.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(changeFaceCheck_);
              changeFaceCheck_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.intellif.ifai.event.Ifai.internal_static_Ifaipb_SubscribeRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.intellif.ifai.event.Ifai.internal_static_Ifaipb_SubscribeRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.intellif.ifai.event.SubscribeRequest.class, com.intellif.ifai.event.SubscribeRequest.Builder.class);
  }

  public static final int RECEIVE_ADDRESS_FIELD_NUMBER = 1;
  private volatile java.lang.Object receiveAddress_;
  /**
   * <pre>
   * 事件通知地址和端口,如果提供，则通知将发往指定的地址，否则就沿着已经建立的连接发送出去
   * </pre>
   *
   * <code>string receive_address = 1;</code>
   */
  public java.lang.String getReceiveAddress() {
    java.lang.Object ref = receiveAddress_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      receiveAddress_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 事件通知地址和端口,如果提供，则通知将发往指定的地址，否则就沿着已经建立的连接发送出去
   * </pre>
   *
   * <code>string receive_address = 1;</code>
   */
  public com.google.protobuf.ByteString
      getReceiveAddressBytes() {
    java.lang.Object ref = receiveAddress_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      receiveAddress_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int RECEIVE_PORT_FIELD_NUMBER = 2;
  private int receivePort_;
  /**
   * <pre>
   * 端口
   * </pre>
   *
   * <code>int32 receive_port = 2;</code>
   */
  public int getReceivePort() {
    return receivePort_;
  }

  public static final int FACE_CAPTURE_FILTER_FIELD_NUMBER = 3;
  private com.intellif.ifai.event.FaceCaptureFilter faceCaptureFilter_;
  /**
   * <pre>
   * 如果不提供，则背景图和人脸图都不会上传
   * </pre>
   *
   * <code>.Ifaipb.FaceCaptureFilter face_capture_filter = 3;</code>
   */
  public boolean hasFaceCaptureFilter() {
    return faceCaptureFilter_ != null;
  }
  /**
   * <pre>
   * 如果不提供，则背景图和人脸图都不会上传
   * </pre>
   *
   * <code>.Ifaipb.FaceCaptureFilter face_capture_filter = 3;</code>
   */
  public com.intellif.ifai.event.FaceCaptureFilter getFaceCaptureFilter() {
    return faceCaptureFilter_ == null ? com.intellif.ifai.event.FaceCaptureFilter.getDefaultInstance() : faceCaptureFilter_;
  }
  /**
   * <pre>
   * 如果不提供，则背景图和人脸图都不会上传
   * </pre>
   *
   * <code>.Ifaipb.FaceCaptureFilter face_capture_filter = 3;</code>
   */
  public com.intellif.ifai.event.FaceCaptureFilterOrBuilder getFaceCaptureFilterOrBuilder() {
    return getFaceCaptureFilter();
  }

  public static final int REPORT_FILTER_FIELD_NUMBER = 4;
  private com.intellif.ifai.event.ReportFilter reportFilter_;
  /**
   * <pre>
   * 识别上报配置，如果不提供则不会上传相关记录
   * </pre>
   *
   * <code>.Ifaipb.ReportFilter report_filter = 4;</code>
   */
  public boolean hasReportFilter() {
    return reportFilter_ != null;
  }
  /**
   * <pre>
   * 识别上报配置，如果不提供则不会上传相关记录
   * </pre>
   *
   * <code>.Ifaipb.ReportFilter report_filter = 4;</code>
   */
  public com.intellif.ifai.event.ReportFilter getReportFilter() {
    return reportFilter_ == null ? com.intellif.ifai.event.ReportFilter.getDefaultInstance() : reportFilter_;
  }
  /**
   * <pre>
   * 识别上报配置，如果不提供则不会上传相关记录
   * </pre>
   *
   * <code>.Ifaipb.ReportFilter report_filter = 4;</code>
   */
  public com.intellif.ifai.event.ReportFilterOrBuilder getReportFilterOrBuilder() {
    return getReportFilter();
  }

  public static final int PASSENGER_FLOW_FILTER_FIELD_NUMBER = 5;
  private com.intellif.ifai.event.PassengerFlowFilter passengerFlowFilter_;
  /**
   * <code>.Ifaipb.PassengerFlowFilter passenger_flow_filter = 5;</code>
   */
  public boolean hasPassengerFlowFilter() {
    return passengerFlowFilter_ != null;
  }
  /**
   * <code>.Ifaipb.PassengerFlowFilter passenger_flow_filter = 5;</code>
   */
  public com.intellif.ifai.event.PassengerFlowFilter getPassengerFlowFilter() {
    return passengerFlowFilter_ == null ? com.intellif.ifai.event.PassengerFlowFilter.getDefaultInstance() : passengerFlowFilter_;
  }
  /**
   * <code>.Ifaipb.PassengerFlowFilter passenger_flow_filter = 5;</code>
   */
  public com.intellif.ifai.event.PassengerFlowFilterOrBuilder getPassengerFlowFilterOrBuilder() {
    return getPassengerFlowFilter();
  }

  public static final int NO_FACE_CHECK_FIELD_NUMBER = 6;
  private com.intellif.ifai.common.CommonStatus noFaceCheck_;
  /**
   * <pre>
   *默认无人脸检测 false-无人脸/true-有人脸
   * </pre>
   *
   * <code>.Ifaipb.CommonStatus no_face_check = 6;</code>
   */
  public boolean hasNoFaceCheck() {
    return noFaceCheck_ != null;
  }
  /**
   * <pre>
   *默认无人脸检测 false-无人脸/true-有人脸
   * </pre>
   *
   * <code>.Ifaipb.CommonStatus no_face_check = 6;</code>
   */
  public com.intellif.ifai.common.CommonStatus getNoFaceCheck() {
    return noFaceCheck_ == null ? com.intellif.ifai.common.CommonStatus.getDefaultInstance() : noFaceCheck_;
  }
  /**
   * <pre>
   *默认无人脸检测 false-无人脸/true-有人脸
   * </pre>
   *
   * <code>.Ifaipb.CommonStatus no_face_check = 6;</code>
   */
  public com.intellif.ifai.common.CommonStatusOrBuilder getNoFaceCheckOrBuilder() {
    return getNoFaceCheck();
  }

  public static final int CHANGE_FACE_CHECK_FIELD_NUMBER = 7;
  private com.intellif.ifai.common.CommonStatus changeFaceCheck_;
  /**
   * <pre>
   *默认人脸改变检测 false-人脸未改变/true-人脸改变
   * </pre>
   *
   * <code>.Ifaipb.CommonStatus change_face_check = 7;</code>
   */
  public boolean hasChangeFaceCheck() {
    return changeFaceCheck_ != null;
  }
  /**
   * <pre>
   *默认人脸改变检测 false-人脸未改变/true-人脸改变
   * </pre>
   *
   * <code>.Ifaipb.CommonStatus change_face_check = 7;</code>
   */
  public com.intellif.ifai.common.CommonStatus getChangeFaceCheck() {
    return changeFaceCheck_ == null ? com.intellif.ifai.common.CommonStatus.getDefaultInstance() : changeFaceCheck_;
  }
  /**
   * <pre>
   *默认人脸改变检测 false-人脸未改变/true-人脸改变
   * </pre>
   *
   * <code>.Ifaipb.CommonStatus change_face_check = 7;</code>
   */
  public com.intellif.ifai.common.CommonStatusOrBuilder getChangeFaceCheckOrBuilder() {
    return getChangeFaceCheck();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getReceiveAddressBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, receiveAddress_);
    }
    if (receivePort_ != 0) {
      output.writeInt32(2, receivePort_);
    }
    if (faceCaptureFilter_ != null) {
      output.writeMessage(3, getFaceCaptureFilter());
    }
    if (reportFilter_ != null) {
      output.writeMessage(4, getReportFilter());
    }
    if (passengerFlowFilter_ != null) {
      output.writeMessage(5, getPassengerFlowFilter());
    }
    if (noFaceCheck_ != null) {
      output.writeMessage(6, getNoFaceCheck());
    }
    if (changeFaceCheck_ != null) {
      output.writeMessage(7, getChangeFaceCheck());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getReceiveAddressBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, receiveAddress_);
    }
    if (receivePort_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, receivePort_);
    }
    if (faceCaptureFilter_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getFaceCaptureFilter());
    }
    if (reportFilter_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getReportFilter());
    }
    if (passengerFlowFilter_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getPassengerFlowFilter());
    }
    if (noFaceCheck_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getNoFaceCheck());
    }
    if (changeFaceCheck_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, getChangeFaceCheck());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.intellif.ifai.event.SubscribeRequest)) {
      return super.equals(obj);
    }
    com.intellif.ifai.event.SubscribeRequest other = (com.intellif.ifai.event.SubscribeRequest) obj;

    boolean result = true;
    result = result && getReceiveAddress()
        .equals(other.getReceiveAddress());
    result = result && (getReceivePort()
        == other.getReceivePort());
    result = result && (hasFaceCaptureFilter() == other.hasFaceCaptureFilter());
    if (hasFaceCaptureFilter()) {
      result = result && getFaceCaptureFilter()
          .equals(other.getFaceCaptureFilter());
    }
    result = result && (hasReportFilter() == other.hasReportFilter());
    if (hasReportFilter()) {
      result = result && getReportFilter()
          .equals(other.getReportFilter());
    }
    result = result && (hasPassengerFlowFilter() == other.hasPassengerFlowFilter());
    if (hasPassengerFlowFilter()) {
      result = result && getPassengerFlowFilter()
          .equals(other.getPassengerFlowFilter());
    }
    result = result && (hasNoFaceCheck() == other.hasNoFaceCheck());
    if (hasNoFaceCheck()) {
      result = result && getNoFaceCheck()
          .equals(other.getNoFaceCheck());
    }
    result = result && (hasChangeFaceCheck() == other.hasChangeFaceCheck());
    if (hasChangeFaceCheck()) {
      result = result && getChangeFaceCheck()
          .equals(other.getChangeFaceCheck());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + RECEIVE_ADDRESS_FIELD_NUMBER;
    hash = (53 * hash) + getReceiveAddress().hashCode();
    hash = (37 * hash) + RECEIVE_PORT_FIELD_NUMBER;
    hash = (53 * hash) + getReceivePort();
    if (hasFaceCaptureFilter()) {
      hash = (37 * hash) + FACE_CAPTURE_FILTER_FIELD_NUMBER;
      hash = (53 * hash) + getFaceCaptureFilter().hashCode();
    }
    if (hasReportFilter()) {
      hash = (37 * hash) + REPORT_FILTER_FIELD_NUMBER;
      hash = (53 * hash) + getReportFilter().hashCode();
    }
    if (hasPassengerFlowFilter()) {
      hash = (37 * hash) + PASSENGER_FLOW_FILTER_FIELD_NUMBER;
      hash = (53 * hash) + getPassengerFlowFilter().hashCode();
    }
    if (hasNoFaceCheck()) {
      hash = (37 * hash) + NO_FACE_CHECK_FIELD_NUMBER;
      hash = (53 * hash) + getNoFaceCheck().hashCode();
    }
    if (hasChangeFaceCheck()) {
      hash = (37 * hash) + CHANGE_FACE_CHECK_FIELD_NUMBER;
      hash = (53 * hash) + getChangeFaceCheck().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.intellif.ifai.event.SubscribeRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.intellif.ifai.event.SubscribeRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.intellif.ifai.event.SubscribeRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.intellif.ifai.event.SubscribeRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.intellif.ifai.event.SubscribeRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.intellif.ifai.event.SubscribeRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.intellif.ifai.event.SubscribeRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.intellif.ifai.event.SubscribeRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.intellif.ifai.event.SubscribeRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.intellif.ifai.event.SubscribeRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.intellif.ifai.event.SubscribeRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.intellif.ifai.event.SubscribeRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.intellif.ifai.event.SubscribeRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code Ifaipb.SubscribeRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:Ifaipb.SubscribeRequest)
      com.intellif.ifai.event.SubscribeRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.intellif.ifai.event.Ifai.internal_static_Ifaipb_SubscribeRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.intellif.ifai.event.Ifai.internal_static_Ifaipb_SubscribeRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.intellif.ifai.event.SubscribeRequest.class, com.intellif.ifai.event.SubscribeRequest.Builder.class);
    }

    // Construct using com.intellif.ifai.event.SubscribeRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      receiveAddress_ = "";

      receivePort_ = 0;

      if (faceCaptureFilterBuilder_ == null) {
        faceCaptureFilter_ = null;
      } else {
        faceCaptureFilter_ = null;
        faceCaptureFilterBuilder_ = null;
      }
      if (reportFilterBuilder_ == null) {
        reportFilter_ = null;
      } else {
        reportFilter_ = null;
        reportFilterBuilder_ = null;
      }
      if (passengerFlowFilterBuilder_ == null) {
        passengerFlowFilter_ = null;
      } else {
        passengerFlowFilter_ = null;
        passengerFlowFilterBuilder_ = null;
      }
      if (noFaceCheckBuilder_ == null) {
        noFaceCheck_ = null;
      } else {
        noFaceCheck_ = null;
        noFaceCheckBuilder_ = null;
      }
      if (changeFaceCheckBuilder_ == null) {
        changeFaceCheck_ = null;
      } else {
        changeFaceCheck_ = null;
        changeFaceCheckBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.intellif.ifai.event.Ifai.internal_static_Ifaipb_SubscribeRequest_descriptor;
    }

    @java.lang.Override
    public com.intellif.ifai.event.SubscribeRequest getDefaultInstanceForType() {
      return com.intellif.ifai.event.SubscribeRequest.getDefaultInstance();
    }

    @java.lang.Override
    public com.intellif.ifai.event.SubscribeRequest build() {
      com.intellif.ifai.event.SubscribeRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.intellif.ifai.event.SubscribeRequest buildPartial() {
      com.intellif.ifai.event.SubscribeRequest result = new com.intellif.ifai.event.SubscribeRequest(this);
      result.receiveAddress_ = receiveAddress_;
      result.receivePort_ = receivePort_;
      if (faceCaptureFilterBuilder_ == null) {
        result.faceCaptureFilter_ = faceCaptureFilter_;
      } else {
        result.faceCaptureFilter_ = faceCaptureFilterBuilder_.build();
      }
      if (reportFilterBuilder_ == null) {
        result.reportFilter_ = reportFilter_;
      } else {
        result.reportFilter_ = reportFilterBuilder_.build();
      }
      if (passengerFlowFilterBuilder_ == null) {
        result.passengerFlowFilter_ = passengerFlowFilter_;
      } else {
        result.passengerFlowFilter_ = passengerFlowFilterBuilder_.build();
      }
      if (noFaceCheckBuilder_ == null) {
        result.noFaceCheck_ = noFaceCheck_;
      } else {
        result.noFaceCheck_ = noFaceCheckBuilder_.build();
      }
      if (changeFaceCheckBuilder_ == null) {
        result.changeFaceCheck_ = changeFaceCheck_;
      } else {
        result.changeFaceCheck_ = changeFaceCheckBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.intellif.ifai.event.SubscribeRequest) {
        return mergeFrom((com.intellif.ifai.event.SubscribeRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.intellif.ifai.event.SubscribeRequest other) {
      if (other == com.intellif.ifai.event.SubscribeRequest.getDefaultInstance()) return this;
      if (!other.getReceiveAddress().isEmpty()) {
        receiveAddress_ = other.receiveAddress_;
        onChanged();
      }
      if (other.getReceivePort() != 0) {
        setReceivePort(other.getReceivePort());
      }
      if (other.hasFaceCaptureFilter()) {
        mergeFaceCaptureFilter(other.getFaceCaptureFilter());
      }
      if (other.hasReportFilter()) {
        mergeReportFilter(other.getReportFilter());
      }
      if (other.hasPassengerFlowFilter()) {
        mergePassengerFlowFilter(other.getPassengerFlowFilter());
      }
      if (other.hasNoFaceCheck()) {
        mergeNoFaceCheck(other.getNoFaceCheck());
      }
      if (other.hasChangeFaceCheck()) {
        mergeChangeFaceCheck(other.getChangeFaceCheck());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.intellif.ifai.event.SubscribeRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.intellif.ifai.event.SubscribeRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object receiveAddress_ = "";
    /**
     * <pre>
     * 事件通知地址和端口,如果提供，则通知将发往指定的地址，否则就沿着已经建立的连接发送出去
     * </pre>
     *
     * <code>string receive_address = 1;</code>
     */
    public java.lang.String getReceiveAddress() {
      java.lang.Object ref = receiveAddress_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        receiveAddress_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 事件通知地址和端口,如果提供，则通知将发往指定的地址，否则就沿着已经建立的连接发送出去
     * </pre>
     *
     * <code>string receive_address = 1;</code>
     */
    public com.google.protobuf.ByteString
        getReceiveAddressBytes() {
      java.lang.Object ref = receiveAddress_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        receiveAddress_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 事件通知地址和端口,如果提供，则通知将发往指定的地址，否则就沿着已经建立的连接发送出去
     * </pre>
     *
     * <code>string receive_address = 1;</code>
     */
    public Builder setReceiveAddress(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      receiveAddress_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 事件通知地址和端口,如果提供，则通知将发往指定的地址，否则就沿着已经建立的连接发送出去
     * </pre>
     *
     * <code>string receive_address = 1;</code>
     */
    public Builder clearReceiveAddress() {
      
      receiveAddress_ = getDefaultInstance().getReceiveAddress();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 事件通知地址和端口,如果提供，则通知将发往指定的地址，否则就沿着已经建立的连接发送出去
     * </pre>
     *
     * <code>string receive_address = 1;</code>
     */
    public Builder setReceiveAddressBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      receiveAddress_ = value;
      onChanged();
      return this;
    }

    private int receivePort_ ;
    /**
     * <pre>
     * 端口
     * </pre>
     *
     * <code>int32 receive_port = 2;</code>
     */
    public int getReceivePort() {
      return receivePort_;
    }
    /**
     * <pre>
     * 端口
     * </pre>
     *
     * <code>int32 receive_port = 2;</code>
     */
    public Builder setReceivePort(int value) {
      
      receivePort_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 端口
     * </pre>
     *
     * <code>int32 receive_port = 2;</code>
     */
    public Builder clearReceivePort() {
      
      receivePort_ = 0;
      onChanged();
      return this;
    }

    private com.intellif.ifai.event.FaceCaptureFilter faceCaptureFilter_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.intellif.ifai.event.FaceCaptureFilter, com.intellif.ifai.event.FaceCaptureFilter.Builder, com.intellif.ifai.event.FaceCaptureFilterOrBuilder> faceCaptureFilterBuilder_;
    /**
     * <pre>
     * 如果不提供，则背景图和人脸图都不会上传
     * </pre>
     *
     * <code>.Ifaipb.FaceCaptureFilter face_capture_filter = 3;</code>
     */
    public boolean hasFaceCaptureFilter() {
      return faceCaptureFilterBuilder_ != null || faceCaptureFilter_ != null;
    }
    /**
     * <pre>
     * 如果不提供，则背景图和人脸图都不会上传
     * </pre>
     *
     * <code>.Ifaipb.FaceCaptureFilter face_capture_filter = 3;</code>
     */
    public com.intellif.ifai.event.FaceCaptureFilter getFaceCaptureFilter() {
      if (faceCaptureFilterBuilder_ == null) {
        return faceCaptureFilter_ == null ? com.intellif.ifai.event.FaceCaptureFilter.getDefaultInstance() : faceCaptureFilter_;
      } else {
        return faceCaptureFilterBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * 如果不提供，则背景图和人脸图都不会上传
     * </pre>
     *
     * <code>.Ifaipb.FaceCaptureFilter face_capture_filter = 3;</code>
     */
    public Builder setFaceCaptureFilter(com.intellif.ifai.event.FaceCaptureFilter value) {
      if (faceCaptureFilterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        faceCaptureFilter_ = value;
        onChanged();
      } else {
        faceCaptureFilterBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * 如果不提供，则背景图和人脸图都不会上传
     * </pre>
     *
     * <code>.Ifaipb.FaceCaptureFilter face_capture_filter = 3;</code>
     */
    public Builder setFaceCaptureFilter(
        com.intellif.ifai.event.FaceCaptureFilter.Builder builderForValue) {
      if (faceCaptureFilterBuilder_ == null) {
        faceCaptureFilter_ = builderForValue.build();
        onChanged();
      } else {
        faceCaptureFilterBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * 如果不提供，则背景图和人脸图都不会上传
     * </pre>
     *
     * <code>.Ifaipb.FaceCaptureFilter face_capture_filter = 3;</code>
     */
    public Builder mergeFaceCaptureFilter(com.intellif.ifai.event.FaceCaptureFilter value) {
      if (faceCaptureFilterBuilder_ == null) {
        if (faceCaptureFilter_ != null) {
          faceCaptureFilter_ =
            com.intellif.ifai.event.FaceCaptureFilter.newBuilder(faceCaptureFilter_).mergeFrom(value).buildPartial();
        } else {
          faceCaptureFilter_ = value;
        }
        onChanged();
      } else {
        faceCaptureFilterBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * 如果不提供，则背景图和人脸图都不会上传
     * </pre>
     *
     * <code>.Ifaipb.FaceCaptureFilter face_capture_filter = 3;</code>
     */
    public Builder clearFaceCaptureFilter() {
      if (faceCaptureFilterBuilder_ == null) {
        faceCaptureFilter_ = null;
        onChanged();
      } else {
        faceCaptureFilter_ = null;
        faceCaptureFilterBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * 如果不提供，则背景图和人脸图都不会上传
     * </pre>
     *
     * <code>.Ifaipb.FaceCaptureFilter face_capture_filter = 3;</code>
     */
    public com.intellif.ifai.event.FaceCaptureFilter.Builder getFaceCaptureFilterBuilder() {
      
      onChanged();
      return getFaceCaptureFilterFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 如果不提供，则背景图和人脸图都不会上传
     * </pre>
     *
     * <code>.Ifaipb.FaceCaptureFilter face_capture_filter = 3;</code>
     */
    public com.intellif.ifai.event.FaceCaptureFilterOrBuilder getFaceCaptureFilterOrBuilder() {
      if (faceCaptureFilterBuilder_ != null) {
        return faceCaptureFilterBuilder_.getMessageOrBuilder();
      } else {
        return faceCaptureFilter_ == null ?
            com.intellif.ifai.event.FaceCaptureFilter.getDefaultInstance() : faceCaptureFilter_;
      }
    }
    /**
     * <pre>
     * 如果不提供，则背景图和人脸图都不会上传
     * </pre>
     *
     * <code>.Ifaipb.FaceCaptureFilter face_capture_filter = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.intellif.ifai.event.FaceCaptureFilter, com.intellif.ifai.event.FaceCaptureFilter.Builder, com.intellif.ifai.event.FaceCaptureFilterOrBuilder> 
        getFaceCaptureFilterFieldBuilder() {
      if (faceCaptureFilterBuilder_ == null) {
        faceCaptureFilterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.intellif.ifai.event.FaceCaptureFilter, com.intellif.ifai.event.FaceCaptureFilter.Builder, com.intellif.ifai.event.FaceCaptureFilterOrBuilder>(
                getFaceCaptureFilter(),
                getParentForChildren(),
                isClean());
        faceCaptureFilter_ = null;
      }
      return faceCaptureFilterBuilder_;
    }

    private com.intellif.ifai.event.ReportFilter reportFilter_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.intellif.ifai.event.ReportFilter, com.intellif.ifai.event.ReportFilter.Builder, com.intellif.ifai.event.ReportFilterOrBuilder> reportFilterBuilder_;
    /**
     * <pre>
     * 识别上报配置，如果不提供则不会上传相关记录
     * </pre>
     *
     * <code>.Ifaipb.ReportFilter report_filter = 4;</code>
     */
    public boolean hasReportFilter() {
      return reportFilterBuilder_ != null || reportFilter_ != null;
    }
    /**
     * <pre>
     * 识别上报配置，如果不提供则不会上传相关记录
     * </pre>
     *
     * <code>.Ifaipb.ReportFilter report_filter = 4;</code>
     */
    public com.intellif.ifai.event.ReportFilter getReportFilter() {
      if (reportFilterBuilder_ == null) {
        return reportFilter_ == null ? com.intellif.ifai.event.ReportFilter.getDefaultInstance() : reportFilter_;
      } else {
        return reportFilterBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * 识别上报配置，如果不提供则不会上传相关记录
     * </pre>
     *
     * <code>.Ifaipb.ReportFilter report_filter = 4;</code>
     */
    public Builder setReportFilter(com.intellif.ifai.event.ReportFilter value) {
      if (reportFilterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        reportFilter_ = value;
        onChanged();
      } else {
        reportFilterBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * 识别上报配置，如果不提供则不会上传相关记录
     * </pre>
     *
     * <code>.Ifaipb.ReportFilter report_filter = 4;</code>
     */
    public Builder setReportFilter(
        com.intellif.ifai.event.ReportFilter.Builder builderForValue) {
      if (reportFilterBuilder_ == null) {
        reportFilter_ = builderForValue.build();
        onChanged();
      } else {
        reportFilterBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * 识别上报配置，如果不提供则不会上传相关记录
     * </pre>
     *
     * <code>.Ifaipb.ReportFilter report_filter = 4;</code>
     */
    public Builder mergeReportFilter(com.intellif.ifai.event.ReportFilter value) {
      if (reportFilterBuilder_ == null) {
        if (reportFilter_ != null) {
          reportFilter_ =
            com.intellif.ifai.event.ReportFilter.newBuilder(reportFilter_).mergeFrom(value).buildPartial();
        } else {
          reportFilter_ = value;
        }
        onChanged();
      } else {
        reportFilterBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * 识别上报配置，如果不提供则不会上传相关记录
     * </pre>
     *
     * <code>.Ifaipb.ReportFilter report_filter = 4;</code>
     */
    public Builder clearReportFilter() {
      if (reportFilterBuilder_ == null) {
        reportFilter_ = null;
        onChanged();
      } else {
        reportFilter_ = null;
        reportFilterBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * 识别上报配置，如果不提供则不会上传相关记录
     * </pre>
     *
     * <code>.Ifaipb.ReportFilter report_filter = 4;</code>
     */
    public com.intellif.ifai.event.ReportFilter.Builder getReportFilterBuilder() {
      
      onChanged();
      return getReportFilterFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 识别上报配置，如果不提供则不会上传相关记录
     * </pre>
     *
     * <code>.Ifaipb.ReportFilter report_filter = 4;</code>
     */
    public com.intellif.ifai.event.ReportFilterOrBuilder getReportFilterOrBuilder() {
      if (reportFilterBuilder_ != null) {
        return reportFilterBuilder_.getMessageOrBuilder();
      } else {
        return reportFilter_ == null ?
            com.intellif.ifai.event.ReportFilter.getDefaultInstance() : reportFilter_;
      }
    }
    /**
     * <pre>
     * 识别上报配置，如果不提供则不会上传相关记录
     * </pre>
     *
     * <code>.Ifaipb.ReportFilter report_filter = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.intellif.ifai.event.ReportFilter, com.intellif.ifai.event.ReportFilter.Builder, com.intellif.ifai.event.ReportFilterOrBuilder> 
        getReportFilterFieldBuilder() {
      if (reportFilterBuilder_ == null) {
        reportFilterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.intellif.ifai.event.ReportFilter, com.intellif.ifai.event.ReportFilter.Builder, com.intellif.ifai.event.ReportFilterOrBuilder>(
                getReportFilter(),
                getParentForChildren(),
                isClean());
        reportFilter_ = null;
      }
      return reportFilterBuilder_;
    }

    private com.intellif.ifai.event.PassengerFlowFilter passengerFlowFilter_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.intellif.ifai.event.PassengerFlowFilter, com.intellif.ifai.event.PassengerFlowFilter.Builder, com.intellif.ifai.event.PassengerFlowFilterOrBuilder> passengerFlowFilterBuilder_;
    /**
     * <code>.Ifaipb.PassengerFlowFilter passenger_flow_filter = 5;</code>
     */
    public boolean hasPassengerFlowFilter() {
      return passengerFlowFilterBuilder_ != null || passengerFlowFilter_ != null;
    }
    /**
     * <code>.Ifaipb.PassengerFlowFilter passenger_flow_filter = 5;</code>
     */
    public com.intellif.ifai.event.PassengerFlowFilter getPassengerFlowFilter() {
      if (passengerFlowFilterBuilder_ == null) {
        return passengerFlowFilter_ == null ? com.intellif.ifai.event.PassengerFlowFilter.getDefaultInstance() : passengerFlowFilter_;
      } else {
        return passengerFlowFilterBuilder_.getMessage();
      }
    }
    /**
     * <code>.Ifaipb.PassengerFlowFilter passenger_flow_filter = 5;</code>
     */
    public Builder setPassengerFlowFilter(com.intellif.ifai.event.PassengerFlowFilter value) {
      if (passengerFlowFilterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        passengerFlowFilter_ = value;
        onChanged();
      } else {
        passengerFlowFilterBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.Ifaipb.PassengerFlowFilter passenger_flow_filter = 5;</code>
     */
    public Builder setPassengerFlowFilter(
        com.intellif.ifai.event.PassengerFlowFilter.Builder builderForValue) {
      if (passengerFlowFilterBuilder_ == null) {
        passengerFlowFilter_ = builderForValue.build();
        onChanged();
      } else {
        passengerFlowFilterBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.Ifaipb.PassengerFlowFilter passenger_flow_filter = 5;</code>
     */
    public Builder mergePassengerFlowFilter(com.intellif.ifai.event.PassengerFlowFilter value) {
      if (passengerFlowFilterBuilder_ == null) {
        if (passengerFlowFilter_ != null) {
          passengerFlowFilter_ =
            com.intellif.ifai.event.PassengerFlowFilter.newBuilder(passengerFlowFilter_).mergeFrom(value).buildPartial();
        } else {
          passengerFlowFilter_ = value;
        }
        onChanged();
      } else {
        passengerFlowFilterBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.Ifaipb.PassengerFlowFilter passenger_flow_filter = 5;</code>
     */
    public Builder clearPassengerFlowFilter() {
      if (passengerFlowFilterBuilder_ == null) {
        passengerFlowFilter_ = null;
        onChanged();
      } else {
        passengerFlowFilter_ = null;
        passengerFlowFilterBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.Ifaipb.PassengerFlowFilter passenger_flow_filter = 5;</code>
     */
    public com.intellif.ifai.event.PassengerFlowFilter.Builder getPassengerFlowFilterBuilder() {
      
      onChanged();
      return getPassengerFlowFilterFieldBuilder().getBuilder();
    }
    /**
     * <code>.Ifaipb.PassengerFlowFilter passenger_flow_filter = 5;</code>
     */
    public com.intellif.ifai.event.PassengerFlowFilterOrBuilder getPassengerFlowFilterOrBuilder() {
      if (passengerFlowFilterBuilder_ != null) {
        return passengerFlowFilterBuilder_.getMessageOrBuilder();
      } else {
        return passengerFlowFilter_ == null ?
            com.intellif.ifai.event.PassengerFlowFilter.getDefaultInstance() : passengerFlowFilter_;
      }
    }
    /**
     * <code>.Ifaipb.PassengerFlowFilter passenger_flow_filter = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.intellif.ifai.event.PassengerFlowFilter, com.intellif.ifai.event.PassengerFlowFilter.Builder, com.intellif.ifai.event.PassengerFlowFilterOrBuilder> 
        getPassengerFlowFilterFieldBuilder() {
      if (passengerFlowFilterBuilder_ == null) {
        passengerFlowFilterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.intellif.ifai.event.PassengerFlowFilter, com.intellif.ifai.event.PassengerFlowFilter.Builder, com.intellif.ifai.event.PassengerFlowFilterOrBuilder>(
                getPassengerFlowFilter(),
                getParentForChildren(),
                isClean());
        passengerFlowFilter_ = null;
      }
      return passengerFlowFilterBuilder_;
    }

    private com.intellif.ifai.common.CommonStatus noFaceCheck_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.intellif.ifai.common.CommonStatus, com.intellif.ifai.common.CommonStatus.Builder, com.intellif.ifai.common.CommonStatusOrBuilder> noFaceCheckBuilder_;
    /**
     * <pre>
     *默认无人脸检测 false-无人脸/true-有人脸
     * </pre>
     *
     * <code>.Ifaipb.CommonStatus no_face_check = 6;</code>
     */
    public boolean hasNoFaceCheck() {
      return noFaceCheckBuilder_ != null || noFaceCheck_ != null;
    }
    /**
     * <pre>
     *默认无人脸检测 false-无人脸/true-有人脸
     * </pre>
     *
     * <code>.Ifaipb.CommonStatus no_face_check = 6;</code>
     */
    public com.intellif.ifai.common.CommonStatus getNoFaceCheck() {
      if (noFaceCheckBuilder_ == null) {
        return noFaceCheck_ == null ? com.intellif.ifai.common.CommonStatus.getDefaultInstance() : noFaceCheck_;
      } else {
        return noFaceCheckBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     *默认无人脸检测 false-无人脸/true-有人脸
     * </pre>
     *
     * <code>.Ifaipb.CommonStatus no_face_check = 6;</code>
     */
    public Builder setNoFaceCheck(com.intellif.ifai.common.CommonStatus value) {
      if (noFaceCheckBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        noFaceCheck_ = value;
        onChanged();
      } else {
        noFaceCheckBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     *默认无人脸检测 false-无人脸/true-有人脸
     * </pre>
     *
     * <code>.Ifaipb.CommonStatus no_face_check = 6;</code>
     */
    public Builder setNoFaceCheck(
        com.intellif.ifai.common.CommonStatus.Builder builderForValue) {
      if (noFaceCheckBuilder_ == null) {
        noFaceCheck_ = builderForValue.build();
        onChanged();
      } else {
        noFaceCheckBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     *默认无人脸检测 false-无人脸/true-有人脸
     * </pre>
     *
     * <code>.Ifaipb.CommonStatus no_face_check = 6;</code>
     */
    public Builder mergeNoFaceCheck(com.intellif.ifai.common.CommonStatus value) {
      if (noFaceCheckBuilder_ == null) {
        if (noFaceCheck_ != null) {
          noFaceCheck_ =
            com.intellif.ifai.common.CommonStatus.newBuilder(noFaceCheck_).mergeFrom(value).buildPartial();
        } else {
          noFaceCheck_ = value;
        }
        onChanged();
      } else {
        noFaceCheckBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     *默认无人脸检测 false-无人脸/true-有人脸
     * </pre>
     *
     * <code>.Ifaipb.CommonStatus no_face_check = 6;</code>
     */
    public Builder clearNoFaceCheck() {
      if (noFaceCheckBuilder_ == null) {
        noFaceCheck_ = null;
        onChanged();
      } else {
        noFaceCheck_ = null;
        noFaceCheckBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     *默认无人脸检测 false-无人脸/true-有人脸
     * </pre>
     *
     * <code>.Ifaipb.CommonStatus no_face_check = 6;</code>
     */
    public com.intellif.ifai.common.CommonStatus.Builder getNoFaceCheckBuilder() {
      
      onChanged();
      return getNoFaceCheckFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *默认无人脸检测 false-无人脸/true-有人脸
     * </pre>
     *
     * <code>.Ifaipb.CommonStatus no_face_check = 6;</code>
     */
    public com.intellif.ifai.common.CommonStatusOrBuilder getNoFaceCheckOrBuilder() {
      if (noFaceCheckBuilder_ != null) {
        return noFaceCheckBuilder_.getMessageOrBuilder();
      } else {
        return noFaceCheck_ == null ?
            com.intellif.ifai.common.CommonStatus.getDefaultInstance() : noFaceCheck_;
      }
    }
    /**
     * <pre>
     *默认无人脸检测 false-无人脸/true-有人脸
     * </pre>
     *
     * <code>.Ifaipb.CommonStatus no_face_check = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.intellif.ifai.common.CommonStatus, com.intellif.ifai.common.CommonStatus.Builder, com.intellif.ifai.common.CommonStatusOrBuilder> 
        getNoFaceCheckFieldBuilder() {
      if (noFaceCheckBuilder_ == null) {
        noFaceCheckBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.intellif.ifai.common.CommonStatus, com.intellif.ifai.common.CommonStatus.Builder, com.intellif.ifai.common.CommonStatusOrBuilder>(
                getNoFaceCheck(),
                getParentForChildren(),
                isClean());
        noFaceCheck_ = null;
      }
      return noFaceCheckBuilder_;
    }

    private com.intellif.ifai.common.CommonStatus changeFaceCheck_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.intellif.ifai.common.CommonStatus, com.intellif.ifai.common.CommonStatus.Builder, com.intellif.ifai.common.CommonStatusOrBuilder> changeFaceCheckBuilder_;
    /**
     * <pre>
     *默认人脸改变检测 false-人脸未改变/true-人脸改变
     * </pre>
     *
     * <code>.Ifaipb.CommonStatus change_face_check = 7;</code>
     */
    public boolean hasChangeFaceCheck() {
      return changeFaceCheckBuilder_ != null || changeFaceCheck_ != null;
    }
    /**
     * <pre>
     *默认人脸改变检测 false-人脸未改变/true-人脸改变
     * </pre>
     *
     * <code>.Ifaipb.CommonStatus change_face_check = 7;</code>
     */
    public com.intellif.ifai.common.CommonStatus getChangeFaceCheck() {
      if (changeFaceCheckBuilder_ == null) {
        return changeFaceCheck_ == null ? com.intellif.ifai.common.CommonStatus.getDefaultInstance() : changeFaceCheck_;
      } else {
        return changeFaceCheckBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     *默认人脸改变检测 false-人脸未改变/true-人脸改变
     * </pre>
     *
     * <code>.Ifaipb.CommonStatus change_face_check = 7;</code>
     */
    public Builder setChangeFaceCheck(com.intellif.ifai.common.CommonStatus value) {
      if (changeFaceCheckBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        changeFaceCheck_ = value;
        onChanged();
      } else {
        changeFaceCheckBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     *默认人脸改变检测 false-人脸未改变/true-人脸改变
     * </pre>
     *
     * <code>.Ifaipb.CommonStatus change_face_check = 7;</code>
     */
    public Builder setChangeFaceCheck(
        com.intellif.ifai.common.CommonStatus.Builder builderForValue) {
      if (changeFaceCheckBuilder_ == null) {
        changeFaceCheck_ = builderForValue.build();
        onChanged();
      } else {
        changeFaceCheckBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     *默认人脸改变检测 false-人脸未改变/true-人脸改变
     * </pre>
     *
     * <code>.Ifaipb.CommonStatus change_face_check = 7;</code>
     */
    public Builder mergeChangeFaceCheck(com.intellif.ifai.common.CommonStatus value) {
      if (changeFaceCheckBuilder_ == null) {
        if (changeFaceCheck_ != null) {
          changeFaceCheck_ =
            com.intellif.ifai.common.CommonStatus.newBuilder(changeFaceCheck_).mergeFrom(value).buildPartial();
        } else {
          changeFaceCheck_ = value;
        }
        onChanged();
      } else {
        changeFaceCheckBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     *默认人脸改变检测 false-人脸未改变/true-人脸改变
     * </pre>
     *
     * <code>.Ifaipb.CommonStatus change_face_check = 7;</code>
     */
    public Builder clearChangeFaceCheck() {
      if (changeFaceCheckBuilder_ == null) {
        changeFaceCheck_ = null;
        onChanged();
      } else {
        changeFaceCheck_ = null;
        changeFaceCheckBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     *默认人脸改变检测 false-人脸未改变/true-人脸改变
     * </pre>
     *
     * <code>.Ifaipb.CommonStatus change_face_check = 7;</code>
     */
    public com.intellif.ifai.common.CommonStatus.Builder getChangeFaceCheckBuilder() {
      
      onChanged();
      return getChangeFaceCheckFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *默认人脸改变检测 false-人脸未改变/true-人脸改变
     * </pre>
     *
     * <code>.Ifaipb.CommonStatus change_face_check = 7;</code>
     */
    public com.intellif.ifai.common.CommonStatusOrBuilder getChangeFaceCheckOrBuilder() {
      if (changeFaceCheckBuilder_ != null) {
        return changeFaceCheckBuilder_.getMessageOrBuilder();
      } else {
        return changeFaceCheck_ == null ?
            com.intellif.ifai.common.CommonStatus.getDefaultInstance() : changeFaceCheck_;
      }
    }
    /**
     * <pre>
     *默认人脸改变检测 false-人脸未改变/true-人脸改变
     * </pre>
     *
     * <code>.Ifaipb.CommonStatus change_face_check = 7;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.intellif.ifai.common.CommonStatus, com.intellif.ifai.common.CommonStatus.Builder, com.intellif.ifai.common.CommonStatusOrBuilder> 
        getChangeFaceCheckFieldBuilder() {
      if (changeFaceCheckBuilder_ == null) {
        changeFaceCheckBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.intellif.ifai.common.CommonStatus, com.intellif.ifai.common.CommonStatus.Builder, com.intellif.ifai.common.CommonStatusOrBuilder>(
                getChangeFaceCheck(),
                getParentForChildren(),
                isClean());
        changeFaceCheck_ = null;
      }
      return changeFaceCheckBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:Ifaipb.SubscribeRequest)
  }

  // @@protoc_insertion_point(class_scope:Ifaipb.SubscribeRequest)
  private static final com.intellif.ifai.event.SubscribeRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.intellif.ifai.event.SubscribeRequest();
  }

  public static com.intellif.ifai.event.SubscribeRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SubscribeRequest>
      PARSER = new com.google.protobuf.AbstractParser<SubscribeRequest>() {
    @java.lang.Override
    public SubscribeRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new SubscribeRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<SubscribeRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SubscribeRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.intellif.ifai.event.SubscribeRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

